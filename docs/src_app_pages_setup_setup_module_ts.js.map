{"version":3,"file":"src_app_pages_setup_setup_module_ts.js","mappings":"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","sources":["./src/app/pages/setup/clinics/clinics.component.ts","./src/app/pages/setup/clinics/clinics.component.html","./src/app/pages/setup/doctors/doctors.component.ts","./src/app/pages/setup/doctors/doctors.component.html","./src/app/pages/setup/employee/employee.component.ts","./src/app/pages/setup/employee/employee.component.html","./src/app/pages/setup/locations/locations.component.ts","./src/app/pages/setup/locations/locations.component.html","./src/app/pages/setup/rooms/rooms.component.ts","./src/app/pages/setup/rooms/rooms.component.html","./src/app/pages/setup/setup-routing.module.ts","./src/app/pages/setup/setup.component.ts","./src/app/pages/setup/setup.component.html","./src/app/pages/setup/setup.module.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Clinic } from \"../../../@core/data/clinic\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\n\r\n@Component({\r\n  selector: \"ngx-clinics\",\r\n  templateUrl: \"./clinics.component.html\",\r\n  styleUrls: [\"./clinics.component.scss\"],\r\n})\r\nexport class ClinicsComponent extends BaseTable<Clinic> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().clinics;\r\n    this.source.load(data);\r\n  }\r\n}\r\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"> </ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected clinics\n        </span>\n        <ng-template #allRows>{{ source.count() }} clinics</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Doctor } from \"../../../@core/data/doctor\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-doctors\",\n  templateUrl: \"./doctors.component.html\",\n  styleUrls: [\"./doctors.component.scss\"],\n})\nexport class DoctorsComponent extends BaseTable<Doctor> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"10%\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().doctors;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"> </ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected doctors\n        </span>\n        <ng-template #allRows>{{ source.count() }} doctors</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { User } from \"../../../@core/data/user\";\nimport { EmailCellComponent } from \"../../shared/components/custom-table-cell-render/email-cell.component\";\nimport { GenderCellComponent } from \"../../shared/components/custom-table-cell-render/gender-cell.component\";\nimport { RoleCellComponent } from \"../../shared/components/custom-table-cell-render/role-cell.component\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-employee\",\n  templateUrl: \"./employee.component.html\",\n  styleUrls: [\"./employee.component.scss\"],\n})\nexport class EmployeeComponent extends BaseTable<User> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"10%\",\n      },\n      email: {\n        title: \"Email\",\n        type: \"custom\",\n        renderComponent: EmailCellComponent,\n      },\n      gender: {\n        title: \"Gender\",\n        type: \"custom\",\n        renderComponent: GenderCellComponent,\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      password: {\n        title: \"Password\",\n        type: \"string\",\n      },\n      role: {\n        title: \"Role\",\n        type: \"custom\",\n        renderComponent: RoleCellComponent,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().users;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"> </ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected employees\n        </span>\n        <ng-template #allRows>{{ source.count() }} employees</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Location } from \"../../../@core/data/location\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-locations\",\n  templateUrl: \"./locations.component.html\",\n  styleUrls: [\"./locations.component.scss\"],\n})\nexport class LocationsComponent extends BaseTable<Location> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"10%\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().locations;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"> </ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected locations\n        </span>\n        <ng-template #allRows>{{ source.count() }} locations</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Room } from \"../../../@core/data/room\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-rooms\",\n  templateUrl: \"./rooms.component.html\",\n  styleUrls: [\"./rooms.component.scss\"],\n})\nexport class RoomsComponent extends BaseTable<Room> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"10%\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().rooms;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"> </ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected employees\n        </span>\n        <ng-template #allRows>{{ source.count() }} employees</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\nimport { EmployeeComponent } from \"./employee/employee.component\";\nimport { LocationsComponent } from \"./locations/locations.component\";\nimport { RoomsComponent } from \"./rooms/rooms.component\";\nimport { SetupComponent } from \"./setup.component\";\nimport { ClinicsComponent } from './clinics/clinics.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SetupComponent,\n    children: [\n      {\n        path: \"employee\",\n        component: EmployeeComponent,\n      },\n      {\n        path: \"rooms\",\n        component: RoomsComponent,\n      },\n      {\n        path: \"locations\",\n        component: LocationsComponent,\n      },\n      {\n        path: \"clinics\",\n        component: ClinicsComponent,\n      },\n      {\n        path: \"doctors\",\n        component: DoctorsComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SetupRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent {\n\n}\n","<router-outlet></router-outlet>","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NbCardModule } from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ClinicsComponent } from \"./clinics/clinics.component\";\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\nimport { EmployeeComponent } from \"./employee/employee.component\";\nimport { LocationsComponent } from \"./locations/locations.component\";\nimport { RoomsComponent } from \"./rooms/rooms.component\";\nimport { SetupRoutingModule } from \"./setup-routing.module\";\nimport { SetupComponent } from \"./setup.component\";\n\n@NgModule({\n  declarations: [\n    EmployeeComponent,\n    RoomsComponent,\n    LocationsComponent,\n    ClinicsComponent,\n    RoomsComponent,\n    DoctorsComponent,\n    SetupComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SetupRoutingModule,\n    NbCardModule,\n    Ng2SmartTableModule,\n  ],\n})\nexport class SetupModule {}\n"],"names":["LocalDataSource","BaseTable","i0","ClinicsComponent","constructor","service","dialogService","selectMode","actions","columns","id","title","type","width","name","data","getData","clinics","source","load","selectors","features","decls","vars","consts","template","ctx","DoctorsComponent","doctors","EmailCellComponent","GenderCellComponent","RoleCellComponent","EmployeeComponent","email","renderComponent","gender","password","role","users","LocationsComponent","address","locations","RoomsComponent","rooms","RouterModule","SetupComponent","routes","path","component","children","SetupRoutingModule","forChild","imports","exports","CommonModule","NbCardModule","Ng2SmartTableModule","SharedModule","SetupModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}