{"version":3,"file":"src_app_pages_setup_setup_module_ts.js","mappings":"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","sources":["./src/app/pages/setup/clinics-add-dialog/clinics-add-dialog.component.ts","./src/app/pages/setup/clinics-add-dialog/clinics-add-dialog.component.html","./src/app/pages/setup/clinics/clinics.component.ts","./src/app/pages/setup/clinics/clinics.component.html","./src/app/pages/setup/doctors-add-dialog/doctors-add-dialog.component.ts","./src/app/pages/setup/doctors-add-dialog/doctors-add-dialog.component.html","./src/app/pages/setup/doctors/doctors.component.ts","./src/app/pages/setup/doctors/doctors.component.html","./src/app/pages/setup/employee-add-dialog/employee-add-dialog.component.ts","./src/app/pages/setup/employee-add-dialog/employee-add-dialog.component.html","./src/app/pages/setup/employee/employee.component.ts","./src/app/pages/setup/employee/employee.component.html","./src/app/pages/setup/locations-add-dialog/locations-add-dialog.component.ts","./src/app/pages/setup/locations-add-dialog/locations-add-dialog.component.html","./src/app/pages/setup/locations/locations.component.ts","./src/app/pages/setup/locations/locations.component.html","./src/app/pages/setup/rooms-add-dialog/rooms-add-dialog.component.ts","./src/app/pages/setup/rooms-add-dialog/rooms-add-dialog.component.html","./src/app/pages/setup/rooms/rooms.component.ts","./src/app/pages/setup/rooms/rooms.component.html","./src/app/pages/setup/setup-routing.module.ts","./src/app/pages/setup/setup.component.ts","./src/app/pages/setup/setup.component.html","./src/app/pages/setup/setup.module.ts"],"sourcesContent":["import { Component, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-clinics-add-dialog',\n  templateUrl: './clinics-add-dialog.component.html',\n  styleUrls: ['./clinics-add-dialog.component.scss']\n})\nexport class ClinicsAddDialogComponent implements OnInit {\n\n  clinicsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n  });\n\n  selectedLocation = null\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<ClinicsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.clinicsAddForm.patchValue(this.selectedLocation)\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.clinicsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.clinicsAddForm.controls[controlName].invalid &&\n      (this.clinicsAddForm.controls[controlName].dirty ||\n        this.clinicsAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"clinicsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new clinic\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Clinic } from \"../../../@core/data/clinic\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { ClinicsAddDialogComponent } from \"../clinics-add-dialog/clinics-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-clinics\",\r\n  templateUrl: \"./clinics.component.html\",\r\n  styleUrls: [\"./clinics.component.scss\"],\r\n})\r\nexport class ClinicsComponent extends BaseTable<Clinic> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n              if(action === Action.Edit){\r\n                this.addDialog(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().clinics;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog(row) {\r\n    this.dialogService.open(ClinicsAddDialogComponent, {\r\n      context: { selectedLocation: row}\r\n    });\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n    (handleAddAction)=\"addDialog(selectedRows[0])\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected clinics\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} clinics</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-doctors-add-dialog',\n  templateUrl: './doctors-add-dialog.component.html',\n  styleUrls: ['./doctors-add-dialog.component.scss']\n})\nexport class DoctorsAddDialogComponent {\n\n  doctorsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<DoctorsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.doctorsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.doctorsAddForm.controls[controlName].invalid &&\n      (this.doctorsAddForm.controls[controlName].dirty ||\n        this.doctorsAddForm.controls[controlName].touched)\n    );\n  }\n\n}\n","<form [formGroup]=\"doctorsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new doctor\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Doctor } from \"../../../@core/data/doctor\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { DoctorsAddDialogComponent } from \"../doctors-add-dialog/doctors-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-doctors\",\r\n  templateUrl: \"./doctors.component.html\",\r\n  styleUrls: [\"./doctors.component.scss\"],\r\n})\r\nexport class DoctorsComponent extends BaseTable<Doctor> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().doctors;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog() {\r\n    this.dialogService.open(DoctorsAddDialogComponent);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n    (handleAddAction)=\"addDialog()\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected doctors\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} doctors</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-employee-add-dialog',\n  templateUrl: './employee-add-dialog.component.html',\n  styleUrls: ['./employee-add-dialog.component.scss']\n})\nexport class EmployeeAddDialogComponent {\n  employeeAddForm = this.fb.group({\n    id: [null],\n    email: [\"\", [Validators.required]],\n    gender: [\"\", [Validators.required]],\n    name: [\"\", [Validators.required]],\n    password: [\"\", [Validators.required]],\n    role: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<EmployeeAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.employeeAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.employeeAddForm.controls[controlName].invalid &&\n      (this.employeeAddForm.controls[controlName].dirty ||\n        this.employeeAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"employeeAddForm\"\n      (ngSubmit)=\"submit()\">\n  <nb-card>\n    <nb-card-header>\n      <div class=\"d-flex align-items-center\">\n        <nb-icon class=\"skip mr-2\"\n                 icon=\"plus-circle-outline\"\n                 pack=\"eva\"\n                 status=\"primary\"\n                 [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n        Add new employee\n      </div>\n    </nb-card-header>\n    <nb-card-body>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"email\"\n                   class=\"label\">Email</label>\n            <input type=\"text\"\n                   nbInput\n                   fullWidth\n                   id=\"email\"\n                   placeholder=\"Email\"\n                   formControlemail=\"email\"\n                   [status]=\"isValid('email') ? 'danger' : 'basic'\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"name\"\n                   class=\"label\">Name</label>\n            <input type=\"text\"\n                   nbInput\n                   fullWidth\n                   id=\"name\"\n                   placeholder=\"Name\"\n                   formControlName=\"name\"\n                   [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"password\"\n                   class=\"label\">Password</label>\n            <input type=\"text\"\n                   nbInput\n                   fullWidth\n                   id=\"password\"\n                   placeholder=\"Password\"\n                   formControlName=\"password\"\n                   [status]=\"isValid('password') ? 'danger' : 'basic'\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"role\"\n                   class=\"label\">Role</label>\n            <nb-select id=\"role\"\n                       fullWidth\n                       placeholder=\"Role\"\n                       formControlName=\"role\"\n                       [status]=\"isValid('role') ? 'danger' : 'basic'\">\n              <nb-option value=\"1\">role 1</nb-option>\n              <nb-option value=\"2\">role 2</nb-option>\n              <nb-option value=\"3\">role 3</nb-option>\n              <nb-option value=\"4\">role 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\"\n                   class=\"label\">Gender</label>\n            <nb-radio-group id=\"gender\"\n                            fullWidth\n                            formControlName=\"gender\"\n                            [status]=\"isValid('gender') ? 'danger' : 'basic'\">\n              <nb-radio value=\"male\">male</nb-radio>\n              <nb-radio value=\"female\">female</nb-radio>\n              <nb-radio value=\"unknown\">Unknown</nb-radio>\n            </nb-radio-group>\n          </div>\n        </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer>\n      <div class=\"d-flex justify-content-end\">\n        <button class=\"mr-2\"\n                type=\"button\"\n                nbButton\n                status=\"basic\"\n                (click)=\"cancel()\">\n          Cancel\n        </button>\n\n        <button type=\"submit\"\n                nbButton\n                hero\n                status=\"primary\"\n                (click)=\"toggleLoadingLargeGroupAnimation()\"\n                [nbSpinner]=\"loadingLargeGroup\"\n                nbSpinnerStatus=\"success\"\n                nbSpinnerMessage=\"\">\n          Save\n        </button>\n      </div>\n    </nb-card-footer>\n  </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { User } from \"../../../@core/data/user\";\r\nimport { EmailCellComponent } from \"../../shared/components/custom-table-cell-render/email-cell.component\";\r\nimport { GenderCellComponent } from \"../../shared/components/custom-table-cell-render/gender-cell.component\";\r\nimport { RoleCellComponent } from \"../../shared/components/custom-table-cell-render/role-cell.component\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { EmployeeAddDialogComponent } from \"../employee-add-dialog/employee-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-employee\",\r\n  templateUrl: \"./employee.component.html\",\r\n  styleUrls: [\"./employee.component.scss\"],\r\n})\r\nexport class EmployeeComponent extends BaseTable<User> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      email: {\r\n        title: \"Email\",\r\n        type: \"custom\",\r\n        renderComponent: EmailCellComponent,\r\n      },\r\n      gender: {\r\n        title: \"Gender\",\r\n        type: \"custom\",\r\n        renderComponent: GenderCellComponent,\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      password: {\r\n        title: \"Password\",\r\n        type: \"string\",\r\n      },\r\n      role: {\r\n        title: \"Role\",\r\n        type: \"custom\",\r\n        renderComponent: RoleCellComponent,\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().users;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog() {\r\n    this.dialogService.open(EmployeeAddDialogComponent);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n    (handleAddAction)=\"addDialog()\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected employees\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} employees</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-locations-add-dialog',\n  templateUrl: './locations-add-dialog.component.html',\n  styleUrls: ['./locations-add-dialog.component.scss']\n})\nexport class LocationsAddDialogComponent implements OnInit {\n  locationsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n    address: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  selectedLocation = null\n\n  constructor(\n    @Optional() private ref: NbDialogRef<LocationsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.locationsAddForm.patchValue(this.selectedLocation)\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.locationsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.locationsAddForm.controls[controlName].invalid &&\n      (this.locationsAddForm.controls[controlName].dirty ||\n        this.locationsAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"locationsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new location\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"address\"\n                               class=\"label\">Address</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"address\"\n                               placeholder=\"Address\"\n                               formControlName=\"address\"\n                               [status]=\"isValid('address') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Location } from \"../../../@core/data/location\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { LocationsAddDialogComponent } from \"../locations-add-dialog/locations-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-locations\",\r\n  templateUrl: \"./locations.component.html\",\r\n  styleUrls: [\"./locations.component.scss\"],\r\n})\r\nexport class LocationsComponent extends BaseTable<Location> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      address: {\r\n        title: \"Address\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n              if(action === Action.Edit){\r\n                this.addDialog(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().locations;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog(row) {\r\n    this.dialogService.open(LocationsAddDialogComponent, {\r\n      context: { selectedLocation: row}\r\n    });\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n                        (handleAddAction)=\"addDialog(selectedRows[0])\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected locations\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} locations</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\"\r\n                     [source]=\"source\"\r\n                     (rowSelect)=\"handleSelectedRow($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>","import { Component, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-rooms-add-dialog',\n  templateUrl: './rooms-add-dialog.component.html',\n  styleUrls: ['./rooms-add-dialog.component.scss']\n})\nexport class RoomsAddDialogComponent {\n\n  roomsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<RoomsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.roomsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.roomsAddForm.controls[controlName].invalid &&\n      (this.roomsAddForm.controls[controlName].dirty ||\n        this.roomsAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"roomsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new room\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Room } from \"../../../@core/data/room\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { RoomsAddDialogComponent } from \"../rooms-add-dialog/rooms-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-rooms\",\r\n  templateUrl: \"./rooms.component.html\",\r\n  styleUrls: [\"./rooms.component.scss\"],\r\n})\r\nexport class RoomsComponent extends BaseTable<Room> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().rooms;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog() {\r\n    this.dialogService.open(RoomsAddDialogComponent);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\" \r\n    (handleAddAction)=\"addDialog()\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected employees\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} employees</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { EmployeeComponent } from \"./employee/employee.component\";\r\nimport { LocationsComponent } from \"./locations/locations.component\";\r\nimport { RoomsComponent } from \"./rooms/rooms.component\";\r\nimport { SetupComponent } from \"./setup.component\";\r\nimport { ClinicsComponent } from './clinics/clinics.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: SetupComponent,\r\n    children: [\r\n      {\r\n        path: \"employee\",\r\n        component: EmployeeComponent,\r\n      },\r\n      {\r\n        path: \"rooms\",\r\n        component: RoomsComponent,\r\n      },\r\n      {\r\n        path: \"locations\",\r\n        component: LocationsComponent,\r\n      },\r\n      {\r\n        path: \"clinics\",\r\n        component: ClinicsComponent,\r\n      },\r\n      {\r\n        path: \"doctors\",\r\n        component: DoctorsComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SetupRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.scss']\r\n})\r\nexport class SetupComponent {\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { NbButtonModule, NbCardModule, NbDatepickerModule, NbDialogModule, NbFormFieldModule, NbIconModule, NbInputModule, NbRadioModule, NbSelectModule, NbSpinnerModule } from \"@nebular/theme\";\r\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { ClinicsComponent } from \"./clinics/clinics.component\";\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { EmployeeComponent } from \"./employee/employee.component\";\r\nimport { LocationsComponent } from \"./locations/locations.component\";\r\nimport { RoomsComponent } from \"./rooms/rooms.component\";\r\nimport { SetupRoutingModule } from \"./setup-routing.module\";\r\nimport { SetupComponent } from \"./setup.component\";\r\nimport { ClinicsAddDialogComponent } from './clinics-add-dialog/clinics-add-dialog.component';\r\nimport { DoctorsAddDialogComponent } from './doctors-add-dialog/doctors-add-dialog.component';\r\nimport { EmployeeAddDialogComponent } from './employee-add-dialog/employee-add-dialog.component';\r\nimport { LocationsAddDialogComponent } from './locations-add-dialog/locations-add-dialog.component';\r\nimport { RoomsAddDialogComponent } from './rooms-add-dialog/rooms-add-dialog.component';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeeComponent,\r\n    RoomsComponent,\r\n    LocationsComponent,\r\n    ClinicsComponent,\r\n    RoomsComponent,\r\n    DoctorsComponent,\r\n    SetupComponent,\r\n    ClinicsAddDialogComponent,\r\n    DoctorsAddDialogComponent,\r\n    EmployeeAddDialogComponent,\r\n    LocationsAddDialogComponent,\r\n    RoomsAddDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    Ng2SmartTableModule,\r\n    NbCardModule,\r\n    NbSelectModule,\r\n    SharedModule,\r\n    NbDialogModule.forChild(),\r\n    NbIconModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NbInputModule,\r\n    NbDatepickerModule,\r\n    NbFormFieldModule,\r\n    NbSelectModule,\r\n    NbRadioModule,\r\n    NbButtonModule,\r\n    NbSpinnerModule\r\n  ],\r\n})\r\nexport class SetupModule {}\r\n"],"names":["Validators","ClinicsAddDialogComponent","constructor","ref","fb","group","id","name","required","ngOnInit","clinicsAddForm","patchValue","selectedLocation","cancel","close","submit","console","log","markAsDirty","toggleLoadingLargeGroupAnimation","loadingLargeGroup","setTimeout","isValid","controlName","controls","invalid","dirty","touched","selectors","decls","vars","consts","template","i0","ctx","LocalDataSource","BaseTable","ActionsCellComponent","Action","ClinicsComponent","service","dialogService","selectMode","actions","columns","title","type","width","renderComponent","valuePrepareFunction","value","row","cell","onComponentInitFunction","instance","actionChange","subscribe","action","Delete","removeItem","Edit","addDialog","sort","filter","data","getData","clinics","source","load","open","context","features","DoctorsAddDialogComponent","doctorsAddForm","DoctorsComponent","doctors","EmployeeAddDialogComponent","email","gender","password","role","employeeAddForm","EmailCellComponent","GenderCellComponent","RoleCellComponent","EmployeeComponent","users","LocationsAddDialogComponent","address","locationsAddForm","LocationsComponent","locations","RoomsAddDialogComponent","roomsAddForm","RoomsComponent","rooms","RouterModule","SetupComponent","routes","path","component","children","SetupRoutingModule","forChild","imports","exports","CommonModule","NbButtonModule","NbCardModule","NbDatepickerModule","NbDialogModule","NbFormFieldModule","NbIconModule","NbInputModule","NbRadioModule","NbSelectModule","NbSpinnerModule","Ng2SmartTableModule","SharedModule","FormsModule","ReactiveFormsModule","SetupModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}