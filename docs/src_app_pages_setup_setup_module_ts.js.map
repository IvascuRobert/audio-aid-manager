{"version":3,"file":"src_app_pages_setup_setup_module_ts.js","mappings":"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","sources":["./src/app/pages/setup/clinics-add-dialog/clinics-add-dialog.component.ts","./src/app/pages/setup/clinics-add-dialog/clinics-add-dialog.component.html","./src/app/pages/setup/clinics/clinics.component.ts","./src/app/pages/setup/clinics/clinics.component.html","./src/app/pages/setup/doctors-add-dialog/doctors-add-dialog.component.ts","./src/app/pages/setup/doctors-add-dialog/doctors-add-dialog.component.html","./src/app/pages/setup/doctors/doctors.component.ts","./src/app/pages/setup/doctors/doctors.component.html","./src/app/pages/setup/employee-add-dialog/employee-add-dialog.component.ts","./src/app/pages/setup/employee-add-dialog/employee-add-dialog.component.html","./src/app/pages/setup/employee/employee.component.ts","./src/app/pages/setup/employee/employee.component.html","./src/app/pages/setup/locations-add-dialog/locations-add-dialog.component.ts","./src/app/pages/setup/locations-add-dialog/locations-add-dialog.component.html","./src/app/pages/setup/locations/locations.component.ts","./src/app/pages/setup/locations/locations.component.html","./src/app/pages/setup/rooms-add-dialog/rooms-add-dialog.component.ts","./src/app/pages/setup/rooms-add-dialog/rooms-add-dialog.component.html","./src/app/pages/setup/rooms/rooms.component.ts","./src/app/pages/setup/rooms/rooms.component.html","./src/app/pages/setup/setup-routing.module.ts","./src/app/pages/setup/setup.component.ts","./src/app/pages/setup/setup.component.html","./src/app/pages/setup/setup.module.ts"],"sourcesContent":["import { Component, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-clinics-add-dialog',\n  templateUrl: './clinics-add-dialog.component.html',\n  styleUrls: ['./clinics-add-dialog.component.scss']\n})\nexport class ClinicsAddDialogComponent implements OnInit {\n\n  clinicsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n  });\n\n  selectedLocation = null\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<ClinicsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.clinicsAddForm.patchValue(this.selectedLocation)\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.clinicsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.clinicsAddForm.controls[controlName].invalid &&\n      (this.clinicsAddForm.controls[controlName].dirty ||\n        this.clinicsAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"clinicsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new clinic\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Clinic } from \"../../../@core/data/clinic\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { ClinicsAddDialogComponent } from \"../clinics-add-dialog/clinics-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-clinics\",\r\n  templateUrl: \"./clinics.component.html\",\r\n  styleUrls: [\"./clinics.component.scss\"],\r\n})\r\nexport class ClinicsComponent extends BaseTable<Clinic> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n              if(action === Action.Edit){\r\n                this.addDialog(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().clinics;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog(row) {\r\n    this.dialogService.open(ClinicsAddDialogComponent, {\r\n      context: { selectedLocation: row}\r\n    });\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n    (handleAddAction)=\"addDialog(selectedRows[0])\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected clinics\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} clinics</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { Doctor } from '../../../@core/data/doctor';\nimport { CoreService } from '../../../@core/services/core.service';\n\n@UntilDestroy()\n@Component({\n  selector: 'ngx-doctors-add-dialog',\n  templateUrl: './doctors-add-dialog.component.html',\n  styleUrls: ['./doctors-add-dialog.component.scss']\n})\nexport class DoctorsAddDialogComponent implements OnInit {\n  doctorsAddForm = this.fb.group({\n    id: [0],\n    name: [\"\", [Validators.required]],\n  });\n\n  doctor: Doctor | null = null\n\n  loading$ = new BehaviorSubject(false);\n\n  get nameControl() {\n    return this.doctorsAddForm.controls.name;\n  }\n\n  constructor(\n    @Optional() private ref: NbDialogRef<DoctorsAddDialogComponent>,\n    private fb: FormBuilder,\n    private coreService: CoreService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.doctor)\n      this.doctorsAddForm.patchValue(this.doctor)\n  }\n\n  close(fetchData = false) {\n    this.ref.close(fetchData);\n  }\n\n  submit() {\n    this.doctorsAddForm.markAllAsTouched();\n    if (this.doctorsAddForm.valid && this.loading$.value === false) {\n      if (this.doctor) {\n        this.updateDoctor()\n      } else {\n        this.addDoctor()\n      }\n    }\n  }\n\n  isValid(controlName: string): boolean {\n    return (\n      this.doctorsAddForm.controls[controlName].invalid &&\n      (this.doctorsAddForm.controls[controlName].dirty ||\n        this.doctorsAddForm.controls[controlName].touched)\n    );\n  }\n\n  private updateDoctor(): void {\n    const doctor: Doctor = this.doctorsAddForm.getRawValue();\n    this.loading$.next(true);\n    this.coreService.putDoctors(doctor).pipe(\n      untilDestroyed(this),\n      finalize(() => {\n        this.loading$.next(false);\n        this.close(true)\n      })\n    ).subscribe()\n  }\n\n  private addDoctor(): void {\n    const doctor: Doctor = this.doctorsAddForm.getRawValue();\n    this.loading$.next(true);\n    this.coreService.postDoctors(doctor).pipe(\n      untilDestroyed(this),\n      finalize(() => {\n        this.loading$.next(false);\n        this.close(true)\n      })\n    ).subscribe()\n  }\n}\n","<ng-container *ngIf=\"{ loading: loading$ | async, doctor: doctor } as data\">\n    <form [formGroup]=\"doctorsAddForm\"\n          (ngSubmit)=\"submit()\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex align-items-center\">\n                    <ng-container *ngIf=\"doctor; else addDoctorTpl\">\n                        <nb-icon class=\"skip mr-2\"\n                                 icon=\"edit-2-outline\"\n                                 pack=\"eva\"\n                                 status=\"primary\"\n                                 [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                        Edit doctor\n                    </ng-container>\n                    <ng-template #addDoctorTpl>\n                        <nb-icon class=\"skip mr-2\"\n                                 icon=\"plus-circle-outline\"\n                                 pack=\"eva\"\n                                 status=\"primary\"\n                                 [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                        Add new doctor\n                    </ng-template>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"form-group\">\n                            <label for=\"name\"\n                                   class=\"label\">Name</label>\n                            <input type=\"text\"\n                                   nbInput\n                                   fullWidth\n                                   id=\"name\"\n                                   placeholder=\"Name\"\n                                   formControlName=\"name\"\n                                   [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                            <ngx-form-errors [control]=\"nameControl\"></ngx-form-errors>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <div class=\"d-flex justify-content-end\">\n                    <button class=\"mr-2\"\n                            type=\"button\"\n                            nbButton\n                            status=\"basic\"\n                            (click)=\"close(false)\">\n                        Cancel\n                    </button>\n\n                    <button type=\"submit\"\n                            nbButton\n                            hero\n                            status=\"primary\"\n                            [nbSpinner]=\"data.loading\"\n                            nbSpinnerStatus=\"success\"\n                            nbSpinnerMessage=\"\">\n                        Save\n                    </button>\n                </div>\n            </nb-card-footer>\n        </nb-card>\n    </form>\n</ng-container>","import { Component, OnInit } from \"@angular/core\";\r\nimport { NbDialogRef, NbDialogService } from \"@nebular/theme\";\r\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\nimport { Doctor } from \"../../../@core/data/doctor\";\r\nimport { Entity } from \"../../../@core/data/entity\";\r\nimport { CoreService } from \"../../../@core/services/core.service\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { DoctorsAddDialogComponent } from \"../doctors-add-dialog/doctors-add-dialog.component\";\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: \"ngx-doctors\",\r\n  templateUrl: \"./doctors.component.html\",\r\n  styleUrls: [\"./doctors.component.scss\"],\r\n})\r\nexport class DoctorsComponent extends BaseTable<Doctor> implements OnInit {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe(({ action, row }) => {\r\n              if (action === Action.Delete) {\r\n                this.removeItem(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  doctors$ = this.coreService.doctors$.pipe(\r\n    tap((doctors) => this.source.load(doctors))\r\n  )\r\n\r\n  entity = Entity.Doctor\r\n\r\n  constructor(\r\n    private coreService: CoreService,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDoctors()\r\n  }\r\n\r\n  addDialog() {\r\n    this.dialogRef().onClose.pipe(untilDestroyed(this)).subscribe((fetchData: boolean) => {\r\n      if (fetchData)\r\n        this.reloadDoctors()\r\n    });\r\n  }\r\n\r\n  editDialog() {\r\n    this.dialogRef(this.selectedRows[0]).onClose.pipe(untilDestroyed(this)).subscribe((fetchData: boolean) => {\r\n      if (fetchData)\r\n        this.reloadDoctors()\r\n    });\r\n  }\r\n\r\n  getDoctors(): void {\r\n    this.coreService.getDoctors().pipe(untilDestroyed(this)).subscribe();\r\n  }\r\n\r\n  private dialogRef(doctor: Doctor | null = null): NbDialogRef<DoctorsAddDialogComponent> {\r\n    return this.dialogService.open(DoctorsAddDialogComponent, {\r\n      context: {\r\n        doctor\r\n      }\r\n    })\r\n  }\r\n\r\n  reloadDoctors(): void {\r\n    this.resetSelectedRows();\r\n    this.getDoctors();\r\n  }\r\n}\r\n","<nb-card *ngIf=\"doctors$ | async\">\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n                        (handleAddAction)=\"addDialog()\"\r\n                        (handleEditAction)=\"editDialog()\"\r\n                        (handleReloadAction)=\"reloadDoctors()\"\r\n                        (handleRemoveAction)=\"openRemoveDialog()\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected doctors\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} doctors</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\"\r\n                     [source]=\"source\"\r\n                     (rowSelect)=\"handleSelectedRow($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>","import { Component, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-employee-add-dialog',\n  templateUrl: './employee-add-dialog.component.html',\n  styleUrls: ['./employee-add-dialog.component.scss']\n})\nexport class EmployeeAddDialogComponent {\n  employeeAddForm = this.fb.group({\n    id: [null],\n    email: [\"\", [Validators.required]],\n    gender: [\"\", [Validators.required]],\n    name: [\"\", [Validators.required]],\n    password: [\"\", [Validators.required]],\n    role: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<EmployeeAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.employeeAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.employeeAddForm.controls[controlName].invalid &&\n      (this.employeeAddForm.controls[controlName].dirty ||\n        this.employeeAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"employeeAddForm\"\n      (ngSubmit)=\"submit()\">\n  <nb-card>\n    <nb-card-header>\n      <div class=\"d-flex align-items-center\">\n        <nb-icon class=\"skip mr-2\"\n                 icon=\"plus-circle-outline\"\n                 pack=\"eva\"\n                 status=\"primary\"\n                 [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n        Add new employee\n      </div>\n    </nb-card-header>\n    <nb-card-body>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"email\"\n                   class=\"label\">Email</label>\n            <input type=\"text\"\n                   nbInput\n                   fullWidth\n                   id=\"email\"\n                   placeholder=\"Email\"\n                   formControlemail=\"email\"\n                   [status]=\"isValid('email') ? 'danger' : 'basic'\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"name\"\n                   class=\"label\">Name</label>\n            <input type=\"text\"\n                   nbInput\n                   fullWidth\n                   id=\"name\"\n                   placeholder=\"Name\"\n                   formControlName=\"name\"\n                   [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"password\"\n                   class=\"label\">Password</label>\n            <input type=\"text\"\n                   nbInput\n                   fullWidth\n                   id=\"password\"\n                   placeholder=\"Password\"\n                   formControlName=\"password\"\n                   [status]=\"isValid('password') ? 'danger' : 'basic'\" />\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"role\"\n                   class=\"label\">Role</label>\n            <nb-select id=\"role\"\n                       fullWidth\n                       placeholder=\"Role\"\n                       formControlName=\"role\"\n                       [status]=\"isValid('role') ? 'danger' : 'basic'\">\n              <nb-option value=\"1\">role 1</nb-option>\n              <nb-option value=\"2\">role 2</nb-option>\n              <nb-option value=\"3\">role 3</nb-option>\n              <nb-option value=\"4\">role 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\"\n                   class=\"label\">Gender</label>\n            <nb-radio-group id=\"gender\"\n                            fullWidth\n                            formControlName=\"gender\"\n                            [status]=\"isValid('gender') ? 'danger' : 'basic'\">\n              <nb-radio value=\"male\">male</nb-radio>\n              <nb-radio value=\"female\">female</nb-radio>\n              <nb-radio value=\"unknown\">Unknown</nb-radio>\n            </nb-radio-group>\n          </div>\n        </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer>\n      <div class=\"d-flex justify-content-end\">\n        <button class=\"mr-2\"\n                type=\"button\"\n                nbButton\n                status=\"basic\"\n                (click)=\"cancel()\">\n          Cancel\n        </button>\n\n        <button type=\"submit\"\n                nbButton\n                hero\n                status=\"primary\"\n                (click)=\"toggleLoadingLargeGroupAnimation()\"\n                [nbSpinner]=\"loadingLargeGroup\"\n                nbSpinnerStatus=\"success\"\n                nbSpinnerMessage=\"\">\n          Save\n        </button>\n      </div>\n    </nb-card-footer>\n  </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { User } from \"../../../@core/data/user\";\r\nimport { EmailCellComponent } from \"../../shared/components/custom-table-cell-render/email-cell.component\";\r\nimport { GenderCellComponent } from \"../../shared/components/custom-table-cell-render/gender-cell.component\";\r\nimport { RoleCellComponent } from \"../../shared/components/custom-table-cell-render/role-cell.component\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { EmployeeAddDialogComponent } from \"../employee-add-dialog/employee-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-employee\",\r\n  templateUrl: \"./employee.component.html\",\r\n  styleUrls: [\"./employee.component.scss\"],\r\n})\r\nexport class EmployeeComponent extends BaseTable<User> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      email: {\r\n        title: \"Email\",\r\n        type: \"custom\",\r\n        renderComponent: EmailCellComponent,\r\n      },\r\n      gender: {\r\n        title: \"Gender\",\r\n        type: \"custom\",\r\n        renderComponent: GenderCellComponent,\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      password: {\r\n        title: \"Password\",\r\n        type: \"string\",\r\n      },\r\n      role: {\r\n        title: \"Role\",\r\n        type: \"custom\",\r\n        renderComponent: RoleCellComponent,\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().users;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog() {\r\n    this.dialogService.open(EmployeeAddDialogComponent);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n    (handleAddAction)=\"addDialog()\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected employees\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} employees</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-locations-add-dialog',\n  templateUrl: './locations-add-dialog.component.html',\n  styleUrls: ['./locations-add-dialog.component.scss']\n})\nexport class LocationsAddDialogComponent implements OnInit {\n  locationsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n    address: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  selectedLocation = null\n\n  constructor(\n    @Optional() private ref: NbDialogRef<LocationsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.locationsAddForm.patchValue(this.selectedLocation)\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.locationsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.locationsAddForm.controls[controlName].invalid &&\n      (this.locationsAddForm.controls[controlName].dirty ||\n        this.locationsAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"locationsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new location\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"address\"\n                               class=\"label\">Address</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"address\"\n                               placeholder=\"Address\"\n                               formControlName=\"address\"\n                               [status]=\"isValid('address') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Location } from \"../../../@core/data/location\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { LocationsAddDialogComponent } from \"../locations-add-dialog/locations-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-locations\",\r\n  templateUrl: \"./locations.component.html\",\r\n  styleUrls: [\"./locations.component.scss\"],\r\n})\r\nexport class LocationsComponent extends BaseTable<Location> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      address: {\r\n        title: \"Address\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n              if(action === Action.Edit){\r\n                this.addDialog(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().locations;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog(row) {\r\n    this.dialogService.open(LocationsAddDialogComponent, {\r\n      context: { selectedLocation: row}\r\n    });\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\"\r\n                        (handleAddAction)=\"addDialog(selectedRows[0])\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected locations\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} locations</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\"\r\n                     [source]=\"source\"\r\n                     (rowSelect)=\"handleSelectedRow($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>","import { Component, Optional } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-rooms-add-dialog',\n  templateUrl: './rooms-add-dialog.component.html',\n  styleUrls: ['./rooms-add-dialog.component.scss']\n})\nexport class RoomsAddDialogComponent {\n\n  roomsAddForm = this.fb.group({\n    id: [null],\n    name: [\"\", [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<RoomsAddDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.roomsAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      this.loadingLargeGroup = false;\n      this.ref.close();\n    }, 3000);\n  }\n\n\n  isValid(controlName: string): boolean {\n    return (\n      this.roomsAddForm.controls[controlName].invalid &&\n      (this.roomsAddForm.controls[controlName].dirty ||\n        this.roomsAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"roomsAddForm\"\n      (ngSubmit)=\"submit()\">\n    <nb-card>\n        <nb-card-header>\n            <div class=\"d-flex align-items-center\">\n                <nb-icon class=\"skip mr-2\"\n                         icon=\"plus-circle-outline\"\n                         pack=\"eva\"\n                         status=\"primary\"\n                         [options]=\"{ animation: { type: 'pulse' } }\"></nb-icon>\n                Add new room\n            </div>\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"name\"\n                               class=\"label\">Name</label>\n                        <input type=\"text\"\n                               nbInput\n                               fullWidth\n                               id=\"name\"\n                               placeholder=\"Name\"\n                               formControlName=\"name\"\n                               [status]=\"isValid('name') ? 'danger' : 'basic'\" />\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"mr-2\"\n                        type=\"button\"\n                        nbButton\n                        status=\"basic\"\n                        (click)=\"cancel()\">\n                    Cancel\n                </button>\n\n                <button type=\"submit\"\n                        nbButton\n                        hero\n                        status=\"primary\"\n                        (click)=\"toggleLoadingLargeGroupAnimation()\"\n                        [nbSpinner]=\"loadingLargeGroup\"\n                        nbSpinnerStatus=\"success\"\n                        nbSpinnerMessage=\"\">\n                    Save\n                </button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</form>","import { Component } from \"@angular/core\";\r\nimport { NbDialogService } from \"@nebular/theme\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Room } from \"../../../@core/data/room\";\r\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\r\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\r\nimport { RoomsAddDialogComponent } from \"../rooms-add-dialog/rooms-add-dialog.component\";\r\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\r\nimport { Action } from \"../../../@core/data/actions\";\r\n\r\n@Component({\r\n  selector: \"ngx-rooms\",\r\n  templateUrl: \"./rooms.component.html\",\r\n  styleUrls: [\"./rooms.component.scss\"],\r\n})\r\nexport class RoomsComponent extends BaseTable<Room> {\r\n  settings: Record<string, any> = {\r\n    selectMode: \"multi\",\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: \"10%\",\r\n      },\r\n      name: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      actions: {\r\n        title: \"Actions\",\r\n        type: \"custom\",\r\n        width: \"1%\",\r\n        renderComponent: ActionsCellComponent,\r\n        valuePrepareFunction: (value, row, cell) => row,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.actionChange\r\n            .subscribe( ({action, row}) => {\r\n              if(action === Action.Delete){\r\n                this.removeItem(row)\r\n              }\r\n            });\r\n        },\r\n        sort: false,\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private service: SmartTableData,\r\n    protected readonly dialogService: NbDialogService\r\n  ) {\r\n    super(dialogService);\r\n    const data = this.service.getData().rooms;\r\n    this.source.load(data);\r\n  }\r\n\r\n  addDialog() {\r\n    this.dialogService.open(RoomsAddDialogComponent);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Actions</nb-card-header>\r\n  <nb-card-body>\r\n    <ngx-custom-actions [selectedRows]=\"selectedRows\" \r\n    (handleAddAction)=\"addDialog()\"> </ngx-custom-actions>\r\n  </nb-card-body>\r\n</nb-card>\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-8\">\r\n        <span *ngIf=\"selectedRows.length; else allRows\">\r\n          {{ selectedRows.length }} selected employees\r\n        </span>\r\n        <ng-template #allRows>{{ source.count() }} employees</ng-template>\r\n      </div>\r\n      <div class=\"col-4\"></div>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (rowSelect)=\"handleSelectedRow($event)\"\r\n    >\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { EmployeeComponent } from \"./employee/employee.component\";\r\nimport { LocationsComponent } from \"./locations/locations.component\";\r\nimport { RoomsComponent } from \"./rooms/rooms.component\";\r\nimport { SetupComponent } from \"./setup.component\";\r\nimport { ClinicsComponent } from './clinics/clinics.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: SetupComponent,\r\n    children: [\r\n      {\r\n        path: \"employee\",\r\n        component: EmployeeComponent,\r\n      },\r\n      {\r\n        path: \"rooms\",\r\n        component: RoomsComponent,\r\n      },\r\n      {\r\n        path: \"locations\",\r\n        component: LocationsComponent,\r\n      },\r\n      {\r\n        path: \"clinics\",\r\n        component: ClinicsComponent,\r\n      },\r\n      {\r\n        path: \"doctors\",\r\n        component: DoctorsComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SetupRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.scss']\r\n})\r\nexport class SetupComponent {\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { NbButtonModule, NbCardModule, NbDatepickerModule, NbDialogModule, NbFormFieldModule, NbIconModule, NbInputModule, NbRadioModule, NbSelectModule, NbSpinnerModule } from \"@nebular/theme\";\r\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { ClinicsComponent } from \"./clinics/clinics.component\";\r\nimport { DoctorsComponent } from \"./doctors/doctors.component\";\r\nimport { EmployeeComponent } from \"./employee/employee.component\";\r\nimport { LocationsComponent } from \"./locations/locations.component\";\r\nimport { RoomsComponent } from \"./rooms/rooms.component\";\r\nimport { SetupRoutingModule } from \"./setup-routing.module\";\r\nimport { SetupComponent } from \"./setup.component\";\r\nimport { ClinicsAddDialogComponent } from './clinics-add-dialog/clinics-add-dialog.component';\r\nimport { DoctorsAddDialogComponent } from './doctors-add-dialog/doctors-add-dialog.component';\r\nimport { EmployeeAddDialogComponent } from './employee-add-dialog/employee-add-dialog.component';\r\nimport { LocationsAddDialogComponent } from './locations-add-dialog/locations-add-dialog.component';\r\nimport { RoomsAddDialogComponent } from './rooms-add-dialog/rooms-add-dialog.component';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployeeComponent,\r\n    RoomsComponent,\r\n    LocationsComponent,\r\n    ClinicsComponent,\r\n    RoomsComponent,\r\n    DoctorsComponent,\r\n    SetupComponent,\r\n    ClinicsAddDialogComponent,\r\n    DoctorsAddDialogComponent,\r\n    EmployeeAddDialogComponent,\r\n    LocationsAddDialogComponent,\r\n    RoomsAddDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SetupRoutingModule,\r\n    Ng2SmartTableModule,\r\n    NbCardModule,\r\n    NbSelectModule,\r\n    SharedModule,\r\n    NbDialogModule.forChild(),\r\n    NbIconModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NbInputModule,\r\n    NbDatepickerModule,\r\n    NbFormFieldModule,\r\n    NbSelectModule,\r\n    NbRadioModule,\r\n    NbButtonModule,\r\n    NbSpinnerModule\r\n  ],\r\n})\r\nexport class SetupModule {}\r\n"],"names":["Validators","ClinicsAddDialogComponent","constructor","ref","fb","group","id","name","required","ngOnInit","clinicsAddForm","patchValue","selectedLocation","cancel","close","submit","console","log","markAsDirty","toggleLoadingLargeGroupAnimation","loadingLargeGroup","setTimeout","isValid","controlName","controls","invalid","dirty","touched","selectors","decls","vars","consts","template","i0","ctx","LocalDataSource","BaseTable","ActionsCellComponent","Action","ClinicsComponent","service","dialogService","selectMode","actions","columns","title","type","width","renderComponent","valuePrepareFunction","value","row","cell","onComponentInitFunction","instance","actionChange","subscribe","action","Delete","removeItem","Edit","addDialog","sort","filter","data","getData","clinics","source","load","open","context","features","UntilDestroy","untilDestroyed","BehaviorSubject","finalize","DoctorsAddDialogComponent","nameControl","doctorsAddForm","coreService","doctor","fetchData","markAllAsTouched","valid","loading$","updateDoctor","addDoctor","getRawValue","next","putDoctors","pipe","postDoctors","tap","Entity","DoctorsComponent","doctors$","doctors","Doctor","getDoctors","dialogRef","onClose","reloadDoctors","editDialog","selectedRows","resetSelectedRows","EmployeeAddDialogComponent","email","gender","password","role","employeeAddForm","EmailCellComponent","GenderCellComponent","RoleCellComponent","EmployeeComponent","users","LocationsAddDialogComponent","address","locationsAddForm","LocationsComponent","locations","RoomsAddDialogComponent","roomsAddForm","RoomsComponent","rooms","RouterModule","SetupComponent","routes","path","component","children","SetupRoutingModule","forChild","imports","exports","CommonModule","NbButtonModule","NbCardModule","NbDatepickerModule","NbDialogModule","NbFormFieldModule","NbIconModule","NbInputModule","NbRadioModule","NbSelectModule","NbSpinnerModule","Ng2SmartTableModule","SharedModule","FormsModule","ReactiveFormsModule","SetupModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}