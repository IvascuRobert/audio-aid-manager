{"version":3,"file":"src_app_pages_customers_customers_module_ts.js","mappings":"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","sources":["./src/app/pages/customers/customer-apportunity/customer-apportunity.component.ts","./src/app/pages/customers/customer-apportunity/customer-apportunity.component.html","./src/app/pages/customers/customer-details/customer-details.component.ts","./src/app/pages/customers/customer-details/customer-details.component.html","./src/app/pages/customers/customers-routing.module.ts","./src/app/pages/customers/customers.component.ts","./src/app/pages/customers/customers.component.html","./src/app/pages/customers/customers.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer-apportunity',\n  templateUrl: './customer-apportunity.component.html',\n  styleUrls: ['./customer-apportunity.component.scss']\n})\nexport class CustomerApportunityComponent {\n\n}\n","<p>customer-apportunity works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.scss']\n})\nexport class CustomerDetailsComponent {\n\n}\n","<p>customer-details works!</p>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CustomerApportunityComponent } from \"./customer-apportunity/customer-apportunity.component\";\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\nimport { CustomersComponent } from \"./customers.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: CustomersComponent,\n    children: [\n      {\n        path: \"details/:id\",\n        component: CustomerDetailsComponent,\n      },\n      {\n        path: \"details/:id/opportunity\",\n        component: CustomerApportunityComponent,\n      },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomersRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { SmartTableData } from \"../../@core/data/smart-table\";\nimport { mapHideOrShowColumns } from \"../../@core/utils/map-hide-or-show-columns\";\nimport {\n  LOCAL_STORAGE_KEYS_FOR_TABLE,\n  getItem,\n  setItem,\n} from \"../../@core/utils/save-local-storage\";\nimport { AgeCellComponent } from \"../shared/custom-table-cell-render/age-cell.component\";\nimport { BoldTextCellComponent } from \"../shared/custom-table-cell-render/bold-text-cell.component\";\nimport { CustomerStatusCellComponent } from \"../shared/custom-table-cell-render/customer-status-cell.component\";\nimport { DateCellComponent } from \"../shared/custom-table-cell-render/date-cell.component\";\nimport { EmailCellComponent } from \"../shared/custom-table-cell-render/email-cell.component\";\nimport { GenderCellComponent } from \"../shared/custom-table-cell-render/gender-cell.component\";\nimport { PhoneCellComponent } from \"../shared/custom-table-cell-render/phone-cell.component\";\nimport { ProcessStatusCellComponent } from \"../shared/custom-table-cell-render/process-status-cell.component\";\n\n@Component({\n  selector: \"ngx-customers\",\n  templateUrl: \"./customers.component.html\",\n  styleUrls: [\"./customers.component.scss\"],\n})\nexport class CustomersComponent {\n  settings: Record<string, any> = {\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"1%\",\n      },\n      status: {\n        title: \"Status\",\n        type: \"custom\",\n        renderComponent: CustomerStatusCellComponent,\n      },\n      firstName: {\n        title: \"First Name\",\n        type: \"custom\",\n        renderComponent: BoldTextCellComponent,\n      },\n      lastName: {\n        title: \"Last Name\",\n        type: \"custom\",\n        renderComponent: BoldTextCellComponent,\n      },\n      gender: {\n        title: \"Gender\",\n        type: \"custom\",\n        renderComponent: GenderCellComponent,\n      },\n      age: {\n        title: \"Age\",\n        type: \"custom\",\n        renderComponent: AgeCellComponent,\n      },\n      telephone: {\n        title: \"Telephone\",\n        type: \"custom\",\n        renderComponent: PhoneCellComponent,\n      },\n      email: {\n        title: \"E-mail\",\n        type: \"custom\",\n        renderComponent: EmailCellComponent,\n        hide: true,\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n        hide: true,\n      },\n      doctor: {\n        title: \"Doctor\",\n        type: \"string\",\n        hide: true,\n      },\n      clinic: {\n        title: \"Clinic\",\n        type: \"string\",\n        hide: true,\n      },\n      contactNote: {\n        title: \"Contact Note\",\n        type: \"string\",\n        hide: true,\n      },\n      processStatus: {\n        title: \"Process status\",\n        type: \"custom\",\n        renderComponent: ProcessStatusCellComponent,\n        hide: true,\n      },\n      location: {\n        title: \"Location\",\n        type: \"string\",\n        hide: true,\n      },\n      appointment: {\n        title: \"Appointment\",\n        type: \"custom\",\n        renderComponent: DateCellComponent,\n        hide: true,\n      },\n    },\n  };\n\n  hiddenColumns = [\n    \"email\",\n    \"address\",\n    \"doctor\",\n    \"clinic\",\n    \"contactNote\",\n    \"processStatus\",\n    \"location\",\n    \"appointment\",\n  ];\n\n  selectedColumns = [];\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData) {\n    const data = this.service.getData().customers;\n    this.source.load(data);\n    this.loadTableSettingsFromLocalStorage();\n  }\n\n  handleSelectedColumns(columns: string[]): void {\n    this.settings = mapHideOrShowColumns(\n      columns,\n      this.settings,\n      this.hiddenColumns\n    );\n    setItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers, columns);\n  }\n\n  private loadTableSettingsFromLocalStorage() {\n    const columns = getItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers);\n\n    if (columns) {\n      this.settings = mapHideOrShowColumns(\n        columns,\n        this.settings,\n        this.hiddenColumns\n      );\n      this.selectedColumns = columns;\n    }\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span>{{ source.count() }} Customers</span>\n      </div>\n      <div class=\"col-4\">\n        <nb-select\n          fullWidth\n          multiple\n          placeholder=\"Columns\"\n          [(selected)]=\"selectedColumns\"\n          (selectedChange)=\"handleSelectedColumns($event)\"\n        >\n          <nb-option *ngFor=\"let item of hiddenColumns\" [value]=\"item\">\n            {{ item }}\n          </nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\"> </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NbCardModule, NbSelectModule } from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { CustomerApportunityComponent } from \"./customer-apportunity/customer-apportunity.component\";\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\nimport { CustomersRoutingModule } from \"./customers-routing.module\";\nimport { CustomersComponent } from \"./customers.component\";\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    CustomerDetailsComponent,\n    CustomerApportunityComponent,\n  ],\n  imports: [\n    CommonModule,\n    CustomersRoutingModule,\n    Ng2SmartTableModule,\n    NbCardModule,\n    NbSelectModule\n  ],\n})\nexport class CustomersModule {}\n"],"names":["CustomerApportunityComponent","selectors","decls","vars","template","i0","CustomerDetailsComponent","RouterModule","CustomersComponent","routes","path","component","children","CustomersRoutingModule","forChild","imports","exports","LocalDataSource","mapHideOrShowColumns","LOCAL_STORAGE_KEYS_FOR_TABLE","getItem","setItem","AgeCellComponent","BoldTextCellComponent","CustomerStatusCellComponent","DateCellComponent","EmailCellComponent","GenderCellComponent","PhoneCellComponent","ProcessStatusCellComponent","constructor","service","actions","columns","id","title","type","width","status","renderComponent","firstName","lastName","gender","age","telephone","email","hide","address","doctor","clinic","contactNote","processStatus","location","appointment","data","getData","customers","source","load","loadTableSettingsFromLocalStorage","handleSelectedColumns","settings","hiddenColumns","selectedColumns","consts","ctx","CommonModule","NbCardModule","NbSelectModule","Ng2SmartTableModule","CustomersModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}