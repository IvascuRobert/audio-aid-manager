{"version":3,"file":"src_app_pages_customers_customers_module_ts.js","mappings":"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","sources":["./src/app/pages/customers/customer-add-dialog/customer-add-dialog.component.ts","./src/app/pages/customers/customer-add-dialog/customer-add-dialog.component.html","./src/app/pages/customers/customer-apportunity/customer-apportunity.component.ts","./src/app/pages/customers/customer-apportunity/customer-apportunity.component.html","./src/app/pages/customers/customer-details/customer-details.component.ts","./src/app/pages/customers/customer-details/customer-details.component.html","./src/app/pages/customers/customers-routing.module.ts","./src/app/pages/customers/customers.component.ts","./src/app/pages/customers/customers.component.html","./src/app/pages/customers/customers.module.ts"],"sourcesContent":["import { Component, Optional } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { NbDialogRef } from \"@nebular/theme\";\nimport { Gender } from \"../../../@core/data/customer\";\n\n@Component({\n  selector: \"ngx-customer-add-dialog\",\n  templateUrl: \"./customer-add-dialog.component.html\",\n  styleUrls: [\"./customer-add-dialog.component.scss\"],\n})\nexport class CustomerAddDialogComponent {\n  customerAddForm = this.fb.group({\n    id: [null],\n    firstName: [\"\", [Validators.required]],\n    lastName: [\"\", [Validators.required]],\n    email: [\"\", [Validators.required, Validators.email]],\n    age: [new Date(), [Validators.required]],\n    telephone: [\"\", [Validators.required]],\n    address: [\"\", [Validators.required]],\n\n    doctor: [\"\", [Validators.required]],\n    clinic: [\"\", [Validators.required]],\n    contactNote: [\"\", [Validators.required]],\n    location: [\"\", [Validators.required]],\n\n    appointment: [\"\"],\n    gender: [Gender.male, [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<CustomerAddDialogComponent>,\n    private fb: FormBuilder\n  ) {}\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.customerAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => (this.loadingLargeGroup = false), 3000);\n  }\n\n  isValid(controlName: string): boolean {\n    return (\n      this.customerAddForm.controls[controlName].invalid &&\n      (this.customerAddForm.controls[controlName].dirty ||\n        this.customerAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"customerAddForm\" (ngSubmit)=\"submit()\">\n  <nb-card>\n    <nb-card-header>Add new customer</nb-card-header>\n    <nb-card-body>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"firstName\" class=\"label\">First name</label>\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              id=\"firstName\"\n              placeholder=\"First name\"\n              formControlName=\"firstName\"\n              [status]=\"isValid('firstName') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"lastName\" class=\"label\">Last name</label>\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              id=\"lastName\"\n              placeholder=\"Last name\"\n              formControlName=\"lastName\"\n              [status]=\"isValid('lastName') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"email\" class=\"label\">Email</label>\n            <input\n              type=\"email\"\n              nbInput\n              fullWidth\n              id=\"email\"\n              placeholder=\"Email\"\n              formControlName=\"email\"\n              [status]=\"isValid('email') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"age\" class=\"label\">Age</label>\n            <input\n              id=\"age\"\n              fullWidth\n              nbInput\n              placeholder=\"Age\"\n              [nbDatepicker]=\"ageRef\"\n              formControlName=\"age\"\n              [status]=\"isValid('age') ? 'danger' : 'basic'\"\n            />\n            <nb-datepicker #ageRef></nb-datepicker>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <label for=\"telephone\" class=\"label\">Telephone</label>\n          <nb-form-field>\n            <nb-icon\n              nbPrefix\n              icon=\"phone-outline\"\n              [options]=\"{ animation: { type: 'pulse' } }\"\n            ></nb-icon>\n            <input\n              type=\"tel\"\n              nbInput\n              fullWidth\n              id=\"telephone\"\n              placeholder=\"Telephone\"\n              formControlName=\"telephone\"\n              [status]=\"isValid('telephone') ? 'danger' : 'basic'\"\n            />\n          </nb-form-field>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"doctor\" class=\"label\">Doctor</label>\n            <nb-select\n              id=\"doctor\"\n              fullWidth\n              placeholder=\"Doctor\"\n              formControlName=\"doctor\"\n              [status]=\"isValid('doctor') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Doctor 1</nb-option>\n              <nb-option value=\"2\">Doctor 2</nb-option>\n              <nb-option value=\"3\">Doctor 3</nb-option>\n              <nb-option value=\"4\">Doctor 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"address\" class=\"label\">Address</label>\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              id=\"address\"\n              placeholder=\"Address\"\n              formControlName=\"address\"\n              [status]=\"isValid('address') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"clinic\" class=\"label\">Clinic</label>\n            <nb-select\n              id=\"clinic\"\n              fullWidth\n              placeholder=\"Clinic\"\n              formControlName=\"clinic\"\n              [status]=\"isValid('clinic') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Clinic 1</nb-option>\n              <nb-option value=\"2\">Clinic 2</nb-option>\n              <nb-option value=\"3\">Clinic 3</nb-option>\n              <nb-option value=\"4\">Clinic 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"location\" class=\"label\">Location</label>\n            <nb-select\n              id=\"location\"\n              fullWidth\n              placeholder=\"Location\"\n              formControlName=\"location\"\n              [status]=\"isValid('location') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Location 1</nb-option>\n              <nb-option value=\"2\">Location 2</nb-option>\n              <nb-option value=\"3\">Location 3</nb-option>\n              <nb-option value=\"4\">Location 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"contactNote\" class=\"label\">Where you find it?</label>\n            <nb-select\n              id=\"contactNote\"\n              fullWidth\n              placeholder=\"Where you find it?\"\n              formControlName=\"contactNote\"\n              [status]=\"isValid('contactNote') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Social Media 1</nb-option>\n              <nb-option value=\"2\">Social Media 2</nb-option>\n              <nb-option value=\"3\">Social Media 3</nb-option>\n              <nb-option value=\"4\">Social Media 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"appointment\" class=\"label\">Appointment</label>\n            <input\n              id=\"appointment\"\n              fullWidth\n              nbInput\n              placeholder=\"Appointment\"\n              [nbDatepicker]=\"appointmentRef\"\n              formControlName=\"appointment\"\n              [status]=\"isValid('appointment') ? 'danger' : 'basic'\"\n            />\n            <nb-datepicker #appointmentRef></nb-datepicker>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\" class=\"label\">Gender</label>\n            <nb-radio-group\n              id=\"gender\"\n              fullWidth\n              formControlName=\"gender\"\n              [status]=\"isValid('gender') ? 'danger' : 'basic'\"\n            >\n              <nb-radio value=\"male\">male 1</nb-radio>\n              <nb-radio value=\"female\">female 2</nb-radio>\n              <nb-radio value=\"transgender\">transgender 3</nb-radio>\n            </nb-radio-group>\n          </div>\n        </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer>\n      <div class=\"d-flex justify-content-end\">\n        <button\n          class=\"mr-2\"\n          type=\"button\"\n          nbButton\n          status=\"basic\"\n          (click)=\"cancel()\"\n        >\n          Cancel\n        </button>\n\n        <button\n          type=\"submit\"\n          nbButton\n          hero\n          status=\"primary\"\n          (click)=\"toggleLoadingLargeGroupAnimation()\"\n          [nbSpinner]=\"loadingLargeGroup\"\n          nbSpinnerStatus=\"success\"\n          nbSpinnerMessage=\"\"\n        >\n          Save\n        </button>\n      </div>\n    </nb-card-footer>\n  </nb-card>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer-apportunity',\n  templateUrl: './customer-apportunity.component.html',\n  styleUrls: ['./customer-apportunity.component.scss']\n})\nexport class CustomerApportunityComponent {\n\n}\n","<p>customer-apportunity works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.scss']\n})\nexport class CustomerDetailsComponent {\n\n}\n","<p>customer-details works!</p>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CustomerApportunityComponent } from \"./customer-apportunity/customer-apportunity.component\";\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\nimport { CustomersComponent } from \"./customers.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: CustomersComponent,\n    children: [\n      {\n        path: \"details/:id\",\n        component: CustomerDetailsComponent,\n      },\n      {\n        path: \"details/:id/opportunity\",\n        component: CustomerApportunityComponent,\n      },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomersRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { NbComponentSize, NbDialogService } from \"@nebular/theme\";\nimport { isNull, remove } from \"lodash\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Customer } from \"../../@core/data/customer\";\nimport { SmartTableData } from \"../../@core/data/smart-table\";\nimport { mapHideOrShowColumns } from \"../../@core/utils/map-hide-or-show-columns\";\nimport {\n  LOCAL_STORAGE_KEYS_FOR_TABLE,\n  getItem,\n  setItem,\n} from \"../../@core/utils/save-local-storage\";\nimport { AgeCellComponent } from \"../shared/custom-table-cell-render/age-cell.component\";\nimport { BoldTextCellComponent } from \"../shared/custom-table-cell-render/bold-text-cell.component\";\nimport { CustomerStatusCellComponent } from \"../shared/custom-table-cell-render/customer-status-cell.component\";\nimport { DateCellComponent } from \"../shared/custom-table-cell-render/date-cell.component\";\nimport { EmailCellComponent } from \"../shared/custom-table-cell-render/email-cell.component\";\nimport { GenderCellComponent } from \"../shared/custom-table-cell-render/gender-cell.component\";\nimport { PhoneCellComponent } from \"../shared/custom-table-cell-render/phone-cell.component\";\nimport { ProcessStatusCellComponent } from \"../shared/custom-table-cell-render/process-status-cell.component\";\nimport { CustomerAddDialogComponent } from \"./customer-add-dialog/customer-add-dialog.component\";\n\n@Component({\n  selector: \"ngx-customers\",\n  templateUrl: \"./customers.component.html\",\n  styleUrls: [\"./customers.component.scss\"],\n})\nexport class CustomersComponent {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"1%\",\n      },\n      status: {\n        title: \"Status\",\n        type: \"custom\",\n        renderComponent: CustomerStatusCellComponent,\n      },\n      firstName: {\n        title: \"First Name\",\n        type: \"custom\",\n        renderComponent: BoldTextCellComponent,\n      },\n      lastName: {\n        title: \"Last Name\",\n        type: \"custom\",\n        renderComponent: BoldTextCellComponent,\n      },\n      gender: {\n        title: \"Gender\",\n        type: \"custom\",\n        renderComponent: GenderCellComponent,\n      },\n      age: {\n        title: \"Age\",\n        type: \"custom\",\n        renderComponent: AgeCellComponent,\n      },\n      telephone: {\n        title: \"Telephone\",\n        type: \"custom\",\n        renderComponent: PhoneCellComponent,\n      },\n      email: {\n        title: \"E-mail\",\n        type: \"custom\",\n        renderComponent: EmailCellComponent,\n        hide: true,\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n        hide: true,\n      },\n      doctor: {\n        title: \"Doctor\",\n        type: \"string\",\n        hide: true,\n      },\n      clinic: {\n        title: \"Clinic\",\n        type: \"string\",\n        hide: true,\n      },\n      contactNote: {\n        title: \"Contact Note\",\n        type: \"string\",\n        hide: true,\n      },\n      processStatus: {\n        title: \"Process status\",\n        type: \"custom\",\n        renderComponent: ProcessStatusCellComponent,\n        hide: true,\n      },\n      location: {\n        title: \"Location\",\n        type: \"string\",\n        hide: true,\n      },\n      appointment: {\n        title: \"Appointment\",\n        type: \"custom\",\n        renderComponent: DateCellComponent,\n        hide: true,\n      },\n    },\n  };\n\n  hiddenColumns = [\n    \"email\",\n    \"address\",\n    \"doctor\",\n    \"clinic\",\n    \"contactNote\",\n    \"processStatus\",\n    \"location\",\n    \"appointment\",\n  ];\n\n  selectedColumns = [];\n\n  selectedRows: Customer[] = [];\n\n  isAllSelected: boolean = false;\n\n  source: LocalDataSource = new LocalDataSource();\n\n  readonly actionSize: NbComponentSize = \"medium\";\n\n  constructor(\n    private service: SmartTableData,\n    private dialogService: NbDialogService\n  ) {\n    const data = this.service.getData().customers;\n    this.source.load(data);\n    this.loadTableSettingsFromLocalStorage();\n  }\n\n  handleSelectedColumns(columns: string[]): void {\n    this.settings = mapHideOrShowColumns(\n      columns,\n      this.settings,\n      this.hiddenColumns\n    );\n    setItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers, columns);\n  }\n\n  handleSelectedRow(row: {\n    data: Customer | null;\n    isSelected: boolean | null;\n    source: LocalDataSource;\n  }): void {\n    if (isNull(row.data)) {\n      this.isAllSelected = !this.isAllSelected;\n      if (this.isAllSelected) {\n        row.source.getAll().then((value) => (this.selectedRows = value));\n      } else {\n        this.selectedRows = [];\n      }\n    } else if (row.isSelected) {\n      this.selectedRows.push(row.data);\n    } else {\n      remove(this.selectedRows, [\"id\", row.data.id]);\n    }\n  }\n\n  openDialog() {\n    this.dialogService.open(CustomerAddDialogComponent, {\n      hasScroll: false,\n    });\n  }\n\n  private loadTableSettingsFromLocalStorage() {\n    const columns = getItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers);\n\n    if (columns) {\n      this.settings = mapHideOrShowColumns(\n        columns,\n        this.settings,\n        this.hiddenColumns\n      );\n      this.selectedColumns = columns;\n    }\n  }\n}\n","<nb-card class=\"actions-card\">\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <nb-actions size=\"medium\">\n      <nb-action\n        [nbTooltip]=\"\n          selectedRows.length === 1 ? 'Edit a customer' : 'Add a customer'\n        \"\n        nbTooltipPlacement=\"top\"\n        [icon]=\"\n          selectedRows.length === 1 ? 'edit-2-outline' : 'plus-circle-outline'\n        \"\n        (click)=\"openDialog()\"\n      ></nb-action>\n      <nb-action\n        [nbTooltip]=\"\n          selectedRows.length === 0\n            ? 'Please select a customer'\n            : 'Remove customers'\n        \"\n        nbTooltipPlacement=\"top\"\n        icon=\"trash-2-outline\"\n        [badgeText]=\"selectedRows.length\"\n        badgeStatus=\"warning\"\n        [disabled]=\"selectedRows.length === 0\"\n      >\n      </nb-action>\n      <nb-action icon=\"email-outline\"></nb-action>\n      <nb-action\n        icon=\"bell-outline\"\n        badgeDot\n        badgePosition=\"top right\"\n        badgeStatus=\"danger\"\n      >\n      </nb-action>\n      <nb-action icon=\"settings-2-outline\"></nb-action>\n      <nb-action>\n        <nb-select\n          shape=\"round\"\n          fullWidth\n          multiple\n          placeholder=\"Columns\"\n          [(selected)]=\"selectedColumns\"\n          (selectedChange)=\"handleSelectedColumns($event)\"\n        >\n          <nb-option *ngFor=\"let item of hiddenColumns\" [value]=\"item\">\n            {{ item }}\n          </nb-option>\n        </nb-select>\n      </nb-action>\n    </nb-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected customers\n        </span>\n        <ng-template #allRows>{{ source.count() }} Customers</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbDatepickerModule,\n  NbDialogModule,\n  NbFormFieldModule,\n  NbIconModule,\n  NbInputModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbSpinnerModule,\n  NbTooltipModule,\n} from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { CustomerAddDialogComponent } from \"./customer-add-dialog/customer-add-dialog.component\";\nimport { CustomerApportunityComponent } from \"./customer-apportunity/customer-apportunity.component\";\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\nimport { CustomersRoutingModule } from \"./customers-routing.module\";\nimport { CustomersComponent } from \"./customers.component\";\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    CustomerDetailsComponent,\n    CustomerApportunityComponent,\n    CustomerAddDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomersRoutingModule,\n    Ng2SmartTableModule,\n    NbCardModule,\n    NbSelectModule,\n    NbActionsModule,\n    NbIconModule,\n    NbButtonModule,\n    NbDialogModule.forChild(),\n    NbInputModule,\n    NbDatepickerModule,\n    NbSpinnerModule,\n    NbRadioModule,\n    NbFormFieldModule,\n    NbTooltipModule,\n  ],\n})\nexport class CustomersModule {}\n"],"names":["Validators","Gender","CustomerAddDialogComponent","constructor","ref","fb","group","id","firstName","required","lastName","email","age","Date","telephone","address","doctor","clinic","contactNote","location","appointment","gender","male","cancel","close","submit","console","log","customerAddForm","markAsDirty","toggleLoadingLargeGroupAnimation","loadingLargeGroup","setTimeout","isValid","controlName","controls","invalid","dirty","touched","selectors","decls","vars","consts","template","i0","ctx","CustomerApportunityComponent","CustomerDetailsComponent","RouterModule","CustomersComponent","routes","path","component","children","CustomersRoutingModule","forChild","imports","exports","isNull","remove","LocalDataSource","mapHideOrShowColumns","LOCAL_STORAGE_KEYS_FOR_TABLE","getItem","setItem","AgeCellComponent","BoldTextCellComponent","CustomerStatusCellComponent","DateCellComponent","EmailCellComponent","GenderCellComponent","PhoneCellComponent","ProcessStatusCellComponent","service","dialogService","selectMode","actions","columns","title","type","width","status","renderComponent","hide","processStatus","data","getData","customers","source","load","loadTableSettingsFromLocalStorage","handleSelectedColumns","settings","hiddenColumns","handleSelectedRow","row","isAllSelected","getAll","then","value","selectedRows","isSelected","push","openDialog","open","hasScroll","selectedColumns","CommonModule","FormsModule","ReactiveFormsModule","NbActionsModule","NbButtonModule","NbCardModule","NbDatepickerModule","NbDialogModule","NbFormFieldModule","NbIconModule","NbInputModule","NbRadioModule","NbSelectModule","NbSpinnerModule","NbTooltipModule","Ng2SmartTableModule","CustomersModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}