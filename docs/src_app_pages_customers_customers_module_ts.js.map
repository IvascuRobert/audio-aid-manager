{"version":3,"file":"src_app_pages_customers_customers_module_ts.js","mappings":"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","sources":["./src/app/pages/customers/customer-add-dialog/customer-add-dialog.component.ts","./src/app/pages/customers/customer-add-dialog/customer-add-dialog.component.html","./src/app/pages/customers/customer-apportunity/customer-apportunity.component.ts","./src/app/pages/customers/customer-apportunity/customer-apportunity.component.html","./src/app/pages/customers/customer-details/customer-details.component.ts","./src/app/pages/customers/customer-details/customer-details.component.html","./src/app/pages/customers/customer-settings-dialog/customer-settings-dialog.component.ts","./src/app/pages/customers/customer-settings-dialog/customer-settings-dialog.component.html","./src/app/pages/customers/customers-routing.module.ts","./src/app/pages/customers/customers.component.ts","./src/app/pages/customers/customers.component.html","./src/app/pages/customers/customers.module.ts"],"sourcesContent":["import { Component, Optional } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { NbDialogRef } from \"@nebular/theme\";\nimport { Gender } from \"../../../@core/data/customer\";\n\n@Component({\n  selector: \"ngx-customer-add-dialog\",\n  templateUrl: \"./customer-add-dialog.component.html\",\n  styleUrls: [\"./customer-add-dialog.component.scss\"],\n})\nexport class CustomerAddDialogComponent {\n  customerAddForm = this.fb.group({\n    id: [null],\n    firstName: [\"\", [Validators.required]],\n    lastName: [\"\", [Validators.required]],\n    email: [\"\", [Validators.required, Validators.email]],\n    age: [new Date(), [Validators.required]],\n    telephone: [\"\", [Validators.required]],\n    address: [\"\", [Validators.required]],\n\n    doctor: [\"\", [Validators.required]],\n    clinic: [\"\", [Validators.required]],\n    contactNote: [\"\", [Validators.required]],\n    location: [\"\", [Validators.required]],\n\n    appointment: [\"\"],\n    gender: [Gender.male, [Validators.required]],\n  });\n\n  loadingLargeGroup = false;\n\n  constructor(\n    @Optional() private ref: NbDialogRef<CustomerAddDialogComponent>,\n    private fb: FormBuilder\n  ) {}\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    console.log(\"here\");\n    this.customerAddForm.markAsDirty();\n    // this.ref.close(value);\n  }\n\n  toggleLoadingLargeGroupAnimation() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => (this.loadingLargeGroup = false), 3000);\n  }\n\n  isValid(controlName: string): boolean {\n    return (\n      this.customerAddForm.controls[controlName].invalid &&\n      (this.customerAddForm.controls[controlName].dirty ||\n        this.customerAddForm.controls[controlName].touched)\n    );\n  }\n}\n","<form [formGroup]=\"customerAddForm\" (ngSubmit)=\"submit()\">\n  <nb-card>\n    <nb-card-header>\n      <div class=\"d-flex align-items-center\">\n        <nb-icon\n          class=\"skip mr-2\"\n          icon=\"plus-circle-outline\"\n          pack=\"eva\"\n          status=\"primary\"\n          [options]=\"{ animation: { type: 'pulse' } }\"\n        ></nb-icon>\n        Add new customer\n      </div>\n    </nb-card-header>\n    <nb-card-body>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"firstName\" class=\"label\">First name</label>\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              id=\"firstName\"\n              placeholder=\"First name\"\n              formControlName=\"firstName\"\n              [status]=\"isValid('firstName') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"lastName\" class=\"label\">Last name</label>\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              id=\"lastName\"\n              placeholder=\"Last name\"\n              formControlName=\"lastName\"\n              [status]=\"isValid('lastName') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"email\" class=\"label\">Email</label>\n            <input\n              type=\"email\"\n              nbInput\n              fullWidth\n              id=\"email\"\n              placeholder=\"Email\"\n              formControlName=\"email\"\n              [status]=\"isValid('email') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"age\" class=\"label\">Age</label>\n            <input\n              id=\"age\"\n              fullWidth\n              nbInput\n              placeholder=\"Age\"\n              [nbDatepicker]=\"ageRef\"\n              formControlName=\"age\"\n              [status]=\"isValid('age') ? 'danger' : 'basic'\"\n            />\n            <nb-datepicker #ageRef></nb-datepicker>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <label for=\"telephone\" class=\"label\">Telephone</label>\n          <nb-form-field>\n            <nb-icon\n              nbPrefix\n              icon=\"phone-outline\"\n              [options]=\"{ animation: { type: 'pulse' } }\"\n            ></nb-icon>\n            <input\n              type=\"tel\"\n              nbInput\n              fullWidth\n              id=\"telephone\"\n              placeholder=\"Telephone\"\n              formControlName=\"telephone\"\n              [status]=\"isValid('telephone') ? 'danger' : 'basic'\"\n            />\n          </nb-form-field>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"doctor\" class=\"label\">Doctor</label>\n            <nb-select\n              id=\"doctor\"\n              fullWidth\n              placeholder=\"Doctor\"\n              formControlName=\"doctor\"\n              [status]=\"isValid('doctor') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Doctor 1</nb-option>\n              <nb-option value=\"2\">Doctor 2</nb-option>\n              <nb-option value=\"3\">Doctor 3</nb-option>\n              <nb-option value=\"4\">Doctor 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"address\" class=\"label\">Address</label>\n            <input\n              type=\"text\"\n              nbInput\n              fullWidth\n              id=\"address\"\n              placeholder=\"Address\"\n              formControlName=\"address\"\n              [status]=\"isValid('address') ? 'danger' : 'basic'\"\n            />\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"clinic\" class=\"label\">Clinic</label>\n            <nb-select\n              id=\"clinic\"\n              fullWidth\n              placeholder=\"Clinic\"\n              formControlName=\"clinic\"\n              [status]=\"isValid('clinic') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Clinic 1</nb-option>\n              <nb-option value=\"2\">Clinic 2</nb-option>\n              <nb-option value=\"3\">Clinic 3</nb-option>\n              <nb-option value=\"4\">Clinic 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"location\" class=\"label\">Location</label>\n            <nb-select\n              id=\"location\"\n              fullWidth\n              placeholder=\"Location\"\n              formControlName=\"location\"\n              [status]=\"isValid('location') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Location 1</nb-option>\n              <nb-option value=\"2\">Location 2</nb-option>\n              <nb-option value=\"3\">Location 3</nb-option>\n              <nb-option value=\"4\">Location 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"contactNote\" class=\"label\">Where you find it?</label>\n            <nb-select\n              id=\"contactNote\"\n              fullWidth\n              placeholder=\"Where you find it?\"\n              formControlName=\"contactNote\"\n              [status]=\"isValid('contactNote') ? 'danger' : 'basic'\"\n            >\n              <nb-option value=\"1\">Social Media 1</nb-option>\n              <nb-option value=\"2\">Social Media 2</nb-option>\n              <nb-option value=\"3\">Social Media 3</nb-option>\n              <nb-option value=\"4\">Social Media 4</nb-option>\n            </nb-select>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"appointment\" class=\"label\">Appointment</label>\n            <input\n              id=\"appointment\"\n              fullWidth\n              nbInput\n              placeholder=\"Appointment\"\n              [nbDatepicker]=\"appointmentRef\"\n              formControlName=\"appointment\"\n              [status]=\"isValid('appointment') ? 'danger' : 'basic'\"\n            />\n            <nb-datepicker #appointmentRef></nb-datepicker>\n          </div>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"form-group\">\n            <label for=\"gender\" class=\"label\">Gender</label>\n            <nb-radio-group\n              id=\"gender\"\n              fullWidth\n              formControlName=\"gender\"\n              [status]=\"isValid('gender') ? 'danger' : 'basic'\"\n            >\n              <nb-radio value=\"male\">male 1</nb-radio>\n              <nb-radio value=\"female\">female 2</nb-radio>\n              <nb-radio value=\"transgender\">transgender 3</nb-radio>\n            </nb-radio-group>\n          </div>\n        </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer>\n      <div class=\"d-flex justify-content-end\">\n        <button\n          class=\"mr-2\"\n          type=\"button\"\n          nbButton\n          status=\"basic\"\n          (click)=\"cancel()\"\n        >\n          Cancel\n        </button>\n\n        <button\n          type=\"submit\"\n          nbButton\n          hero\n          status=\"primary\"\n          (click)=\"toggleLoadingLargeGroupAnimation()\"\n          [nbSpinner]=\"loadingLargeGroup\"\n          nbSpinnerStatus=\"success\"\n          nbSpinnerMessage=\"\"\n        >\n          Save\n        </button>\n      </div>\n    </nb-card-footer>\n  </nb-card>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer-apportunity',\n  templateUrl: './customer-apportunity.component.html',\n  styleUrls: ['./customer-apportunity.component.scss']\n})\nexport class CustomerApportunityComponent {\n\n}\n","<p>customer-apportunity works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.scss']\n})\nexport class CustomerDetailsComponent {\n\n}\n","<p>customer-details works!</p>\n","import { Component, OnInit, Optional } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { NbDialogRef } from \"@nebular/theme\";\nimport {\n  LOCAL_STORAGE_KEYS_FOR_TABLE,\n  getItem,\n} from \"../../../@core/utils/save-local-storage\";\n\n@Component({\n  selector: \"ngx-customer-settings-dialog\",\n  templateUrl: \"./customer-settings-dialog.component.html\",\n  styleUrls: [\"./customer-settings-dialog.component.scss\"],\n})\nexport class CustomerSettingsDialogComponent implements OnInit {\n  customerSettingsForm = this.fb.group({\n    columns: [null],\n  });\n\n  loadingLargeGroup = false;\n\n  hiddenColumns = [\n    \"email\",\n    \"address\",\n    \"doctor\",\n    \"clinic\",\n    \"contactNote\",\n    \"processStatus\",\n    \"location\",\n    \"appointment\",\n  ];\n\n  constructor(\n    @Optional() private ref: NbDialogRef<CustomerSettingsDialogComponent>,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.loadSelectColumnsFromLocalStorage();\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  submit() {\n    this.loadingLargeGroup = true;\n\n    setTimeout(() => {\n      const customerSettingsFormValue = this.customerSettingsForm.getRawValue();\n      this.loadingLargeGroup = false;\n      this.ref.close({\n        ...customerSettingsFormValue,\n        ...{ hiddenColumns: this.hiddenColumns },\n      });\n    }, 3000);\n  }\n\n  isValid(controlName: string): boolean {\n    return (\n      this.customerSettingsForm.controls[controlName].invalid &&\n      (this.customerSettingsForm.controls[controlName].dirty ||\n        this.customerSettingsForm.controls[controlName].touched)\n    );\n  }\n\n  private loadSelectColumnsFromLocalStorage() {\n    const columns = getItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers);\n    this.customerSettingsForm.controls.columns.setValue(columns);\n  }\n}\n","<form [formGroup]=\"customerSettingsForm\" (ngSubmit)=\"submit()\">\n  <nb-card>\n    <nb-card-header>\n      <div class=\"d-flex align-items-center\">\n        <nb-icon\n          class=\"skip mr-2\"\n          icon=\"settings-2-outline\"\n          pack=\"eva\"\n          status=\"basic\"\n          [options]=\"{ animation: { type: 'pulse' } }\"\n        ></nb-icon>\n        Settings\n      </div>\n    </nb-card-header>\n    <nb-card-body>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group\">\n            <label for=\"columns\" class=\"label\">Columns</label>\n            <nb-select\n              id=\"columns\"\n              fullWidth\n              placeholder=\"Columns\"\n              formControlName=\"columns\"\n              multiple\n              [status]=\"isValid('columns') ? 'danger' : 'basic'\"\n            >\n              <nb-option *ngFor=\"let item of hiddenColumns\" [value]=\"item\">\n                {{ item }}\n              </nb-option>\n            </nb-select>\n          </div>\n        </div>\n      </div>\n    </nb-card-body>\n    <nb-card-footer>\n      <div class=\"d-flex justify-content-end\">\n        <button\n          class=\"mr-2\"\n          type=\"button\"\n          nbButton\n          status=\"basic\"\n          (click)=\"cancel()\"\n        >\n          Cancel\n        </button>\n\n        <button\n          type=\"submit\"\n          nbButton\n          hero\n          status=\"primary\"\n          [nbSpinner]=\"loadingLargeGroup\"\n          nbSpinnerStatus=\"success\"\n          nbSpinnerMessage=\"\"\n        >\n          Save\n        </button>\n      </div>\n    </nb-card-footer>\n  </nb-card>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { CustomerApportunityComponent } from \"./customer-apportunity/customer-apportunity.component\";\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\nimport { CustomersComponent } from \"./customers.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: CustomersComponent,\n  },\n  {\n    path: \"details/:id\",\n    component: CustomerDetailsComponent,\n  },\n  {\n    path: \"details/:id/opportunity\",\n    component: CustomerApportunityComponent,\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomersRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NbComponentSize, NbDialogService } from \"@nebular/theme\";\nimport { isNull, remove } from \"lodash\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Customer } from \"../../@core/data/customer\";\nimport { SmartTableData } from \"../../@core/data/smart-table\";\nimport {\n  mapHideOrShowColumns,\n  mapShowColumns,\n} from \"../../@core/utils/map-hide-or-show-columns\";\nimport {\n  LOCAL_STORAGE_KEYS_FOR_TABLE,\n  getItem,\n  setItem,\n} from \"../../@core/utils/save-local-storage\";\nimport { ActionsCellComponent } from \"../shared/custom-table-cell-render/actions-cell.component\";\nimport { AgeCellComponent } from \"../shared/custom-table-cell-render/age-cell.component\";\nimport { BoldTextCellComponent } from \"../shared/custom-table-cell-render/bold-text-cell.component\";\nimport { CustomerStatusCellComponent } from \"../shared/custom-table-cell-render/customer-status-cell.component\";\nimport { DateCellComponent } from \"../shared/custom-table-cell-render/date-cell.component\";\nimport { EmailCellComponent } from \"../shared/custom-table-cell-render/email-cell.component\";\nimport { GenderCellComponent } from \"../shared/custom-table-cell-render/gender-cell.component\";\nimport { PhoneCellComponent } from \"../shared/custom-table-cell-render/phone-cell.component\";\nimport { ProcessStatusCellComponent } from \"../shared/custom-table-cell-render/process-status-cell.component\";\nimport { RemoveDialogComponent } from \"../shared/remove-dialog/remove-dialog.component\";\nimport { CustomerAddDialogComponent } from \"./customer-add-dialog/customer-add-dialog.component\";\nimport { CustomerSettingsDialogComponent } from \"./customer-settings-dialog/customer-settings-dialog.component\";\n\n@Component({\n  selector: \"ngx-customers\",\n  templateUrl: \"./customers.component.html\",\n  styleUrls: [\"./customers.component.scss\"],\n})\nexport class CustomersComponent {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"1%\",\n      },\n      status: {\n        title: \"Status\",\n        type: \"custom\",\n        renderComponent: CustomerStatusCellComponent,\n      },\n      firstName: {\n        title: \"First Name\",\n        type: \"custom\",\n        renderComponent: BoldTextCellComponent,\n      },\n      lastName: {\n        title: \"Last Name\",\n        type: \"custom\",\n        renderComponent: BoldTextCellComponent,\n      },\n      gender: {\n        title: \"Gender\",\n        type: \"custom\",\n        renderComponent: GenderCellComponent,\n      },\n      age: {\n        title: \"Age\",\n        type: \"custom\",\n        renderComponent: AgeCellComponent,\n      },\n      telephone: {\n        title: \"Telephone\",\n        type: \"custom\",\n        renderComponent: PhoneCellComponent,\n      },\n      email: {\n        title: \"E-mail\",\n        type: \"custom\",\n        renderComponent: EmailCellComponent,\n        hide: true,\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n        hide: true,\n      },\n      doctor: {\n        title: \"Doctor\",\n        type: \"string\",\n        hide: true,\n      },\n      clinic: {\n        title: \"Clinic\",\n        type: \"string\",\n        hide: true,\n      },\n      contactNote: {\n        title: \"Contact Note\",\n        type: \"string\",\n        hide: true,\n      },\n      processStatus: {\n        title: \"Process status\",\n        type: \"custom\",\n        renderComponent: ProcessStatusCellComponent,\n        hide: true,\n      },\n      location: {\n        title: \"Location\",\n        type: \"string\",\n        hide: true,\n      },\n      appointment: {\n        title: \"Appointment\",\n        type: \"custom\",\n        renderComponent: DateCellComponent,\n        hide: true,\n      },\n      actions: {\n        title: \"Actions\",\n        type: \"custom\",\n        width: \"1%\",\n        renderComponent: ActionsCellComponent,\n        sort: false,\n        filter: false,\n      },\n    },\n  };\n\n  selectedRows: Customer[] = [];\n\n  isAllSelected: boolean = false;\n\n  source: LocalDataSource = new LocalDataSource();\n\n  readonly actionSize: NbComponentSize = \"medium\";\n\n  constructor(\n    private service: SmartTableData,\n    private dialogService: NbDialogService,\n    private router: Router\n  ) {\n    const data = this.service.getData().customers;\n    this.source.load(data);\n    this.loadTableSettingsFromLocalStorage();\n  }\n\n  handleSelectedRow(row: {\n    data: Customer | null;\n    isSelected: boolean | null;\n    source: LocalDataSource;\n  }): void {\n    if (isNull(row.data)) {\n      this.isAllSelected = !this.isAllSelected;\n      if (this.isAllSelected) {\n        row.source.getAll().then((value) => (this.selectedRows = value));\n      } else {\n        this.selectedRows = [];\n      }\n    } else if (row.isSelected) {\n      this.selectedRows.push(row.data);\n    } else {\n      remove(this.selectedRows, [\"id\", row.data.id]);\n    }\n  }\n\n  addDialog() {\n    this.dialogService.open(CustomerAddDialogComponent);\n  }\n\n  view() {\n    if (this.selectedRows.length > 0) {\n      this.router.navigate([\n        `/pages/customers/details/${this.selectedRows[0].id}`,\n      ]);\n    }\n  }\n\n  removeDialog() {\n    if (this.selectedRows.length > 0) {\n      this.dialogService\n        .open(RemoveDialogComponent)\n        .onClose.subscribe((remove) => {\n          if (remove) {\n            this.source.remove(this.selectedRows[0]);\n          }\n        });\n    }\n  }\n\n  settingsDialog() {\n    this.dialogService\n      .open(CustomerSettingsDialogComponent)\n      .onClose.subscribe((settings) => {\n        if (settings) {\n          const { columns, hiddenColumns } = settings;\n          this.settings = mapHideOrShowColumns(\n            columns,\n            this.settings,\n            hiddenColumns\n          );\n          setItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers, columns);\n        }\n      });\n  }\n\n  reload() {\n    this.source.refresh();\n  }\n\n  private loadTableSettingsFromLocalStorage() {\n    const columns = getItem(LOCAL_STORAGE_KEYS_FOR_TABLE.customers);\n\n    if (columns) {\n      this.settings = mapShowColumns(columns, this.settings);\n    }\n  }\n}\n","<nb-card class=\"actions-card\">\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <nb-actions size=\"medium\">\n      <nb-action\n        [nbTooltip]=\"\n          selectedRows.length === 1 ? 'Edit a customer' : 'Add a customer'\n        \"\n        nbTooltipPlacement=\"top\"\n        [icon]=\"\n          selectedRows.length === 1 ? 'edit-2-outline' : 'plus-circle-outline'\n        \"\n        (click)=\"addDialog()\"\n      ></nb-action>\n      <nb-action\n        [nbTooltip]=\"\n          selectedRows.length === 0\n            ? 'Please select a customer'\n            : 'Remove customers'\n        \"\n        nbTooltipPlacement=\"top\"\n        icon=\"trash-2-outline\"\n        [badgeText]=\"selectedRows.length\"\n        badgeStatus=\"warning\"\n        [disabled]=\"selectedRows.length === 0\"\n        (click)=\"removeDialog()\"\n      >\n      </nb-action>\n      <nb-action\n        [disabled]=\"selectedRows.length === 0\"\n        [nbTooltip]=\"\n          selectedRows.length === 0\n            ? 'Please select a customer'\n            : 'View customer'\n        \"\n        nbTooltipPlacement=\"top\"\n        icon=\"eye-outline\"\n        (click)=\"view()\"\n      ></nb-action>\n      <nb-action icon=\"refresh-outline\" (click)=\"reload()\"></nb-action>\n      <nb-action\n        icon=\"settings-2-outline\"\n        (click)=\"settingsDialog()\"\n      ></nb-action>\n    </nb-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected customers\n        </span>\n        <ng-template #allRows>{{ source.count() }} Customers</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbDatepickerModule,\n  NbDialogModule,\n  NbFormFieldModule,\n  NbIconModule,\n  NbInputModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbSpinnerModule,\n  NbTooltipModule,\n} from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { CustomerAddDialogComponent } from \"./customer-add-dialog/customer-add-dialog.component\";\nimport { CustomerApportunityComponent } from \"./customer-apportunity/customer-apportunity.component\";\nimport { CustomerDetailsComponent } from \"./customer-details/customer-details.component\";\nimport { CustomersRoutingModule } from \"./customers-routing.module\";\nimport { CustomersComponent } from \"./customers.component\";\nimport { CustomerSettingsDialogComponent } from './customer-settings-dialog/customer-settings-dialog.component';\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    CustomerDetailsComponent,\n    CustomerApportunityComponent,\n    CustomerAddDialogComponent,\n    CustomerSettingsDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomersRoutingModule,\n    Ng2SmartTableModule,\n    NbCardModule,\n    NbSelectModule,\n    NbActionsModule,\n    NbIconModule,\n    NbButtonModule,\n    NbDialogModule.forChild(),\n    NbInputModule,\n    NbDatepickerModule,\n    NbSpinnerModule,\n    NbRadioModule,\n    NbFormFieldModule,\n    NbTooltipModule,\n  ],\n})\nexport class CustomersModule {}\n"],"names":["Validators","Gender","CustomerAddDialogComponent","constructor","ref","fb","group","id","firstName","required","lastName","email","age","Date","telephone","address","doctor","clinic","contactNote","location","appointment","gender","male","cancel","close","submit","console","log","customerAddForm","markAsDirty","toggleLoadingLargeGroupAnimation","loadingLargeGroup","setTimeout","isValid","controlName","controls","invalid","dirty","touched","selectors","decls","vars","consts","template","i0","ctx","CustomerApportunityComponent","CustomerDetailsComponent","LOCAL_STORAGE_KEYS_FOR_TABLE","getItem","CustomerSettingsDialogComponent","columns","ngOnInit","loadSelectColumnsFromLocalStorage","customerSettingsFormValue","customerSettingsForm","getRawValue","hiddenColumns","customers","setValue","RouterModule","CustomersComponent","routes","path","component","CustomersRoutingModule","forChild","imports","exports","isNull","remove","LocalDataSource","mapHideOrShowColumns","mapShowColumns","setItem","ActionsCellComponent","AgeCellComponent","BoldTextCellComponent","CustomerStatusCellComponent","DateCellComponent","EmailCellComponent","GenderCellComponent","PhoneCellComponent","ProcessStatusCellComponent","RemoveDialogComponent","service","dialogService","router","selectMode","actions","title","type","width","status","renderComponent","hide","processStatus","sort","filter","data","getData","source","load","loadTableSettingsFromLocalStorage","handleSelectedRow","row","isAllSelected","getAll","then","value","selectedRows","isSelected","push","addDialog","open","view","length","navigate","removeDialog","onClose","subscribe","settingsDialog","settings","reload","refresh","CommonModule","FormsModule","ReactiveFormsModule","NbActionsModule","NbButtonModule","NbCardModule","NbDatepickerModule","NbDialogModule","NbFormFieldModule","NbIconModule","NbInputModule","NbRadioModule","NbSelectModule","NbSpinnerModule","NbTooltipModule","Ng2SmartTableModule","CustomersModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}