{"version":3,"file":"src_app_pages_products_products_module_ts.js","mappings":"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","sources":["./src/app/pages/products/accessories/accessories.component.ts","./src/app/pages/products/accessories/accessories.component.html","./src/app/pages/products/devices/devices.component.ts","./src/app/pages/products/devices/devices.component.html","./src/app/pages/products/products-routing.module.ts","./src/app/pages/products/products.module.ts","./src/app/pages/products/services/services.component.ts","./src/app/pages/products/services/services.component.html","./src/app/pages/products/utilities/utilities.component.ts","./src/app/pages/products/utilities/utilities.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Accessory } from \"../../../@core/data/accessory\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { LOCAL_STORAGE_KEYS_FOR_TABLE } from \"../../../@core/utils/save-local-storage\";\nimport { AccessoryStatusCellComponent } from \"../../shared/components/custom-table-cell-render/accessory-status-cell.component\";\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\nimport { PriceCellComponent } from \"../../shared/components/custom-table-cell-render/price-cell.component\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-accessories\",\n  templateUrl: \"./accessories.component.html\",\n  styleUrls: [\"./accessories.component.scss\"],\n})\nexport class AccessoriesComponent extends BaseTable<Accessory> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n      },\n      status: {\n        title: \"Status\",\n        type: \"custom\",\n        renderComponent: AccessoryStatusCellComponent,\n      },\n      group: {\n        title: \"Group\",\n        type: \"string\",\n      },\n      serialNumber: {\n        title: \"Serial number\",\n        type: \"string\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      brand: {\n        title: \"Brand\",\n        type: \"string\",\n      },\n      type: {\n        title: \"Type\",\n        type: \"string\",\n      },\n      price: {\n        title: \"Price\",\n        type: \"custom\",\n        renderComponent: PriceCellComponent,\n        hide: true,\n      },\n      location: {\n        title: \"Location\",\n        type: \"string\",\n      },\n      customer: {\n        title: \"Customer\",\n        type: \"string\",\n      },\n      actions: {\n        title: \"Actions\",\n        type: \"custom\",\n        width: \"1%\",\n        renderComponent: ActionsCellComponent,\n        sort: false,\n        filter: false,\n      },\n    },\n  };\n\n  localStorageSettingsKey = LOCAL_STORAGE_KEYS_FOR_TABLE.accessories;\n\n  hiddenColumns = [\"price\"];\n\n  selectedColumns = [];\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().accessories;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions\n      [selectedRows]=\"selectedRows\"\n      (handleRemoveAction)=\"removeItem()\"\n      (handleReloadAction)=\"reload()\"\n      (handleSettingsAction)=\"settingsDialog()\"\n    ></ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span>{{ source.count() }} Customers</span>\n      </div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Device } from \"../../../@core/data/device\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { LOCAL_STORAGE_KEYS_FOR_TABLE } from \"../../../@core/utils/save-local-storage\";\nimport { AccessoryStatusCellComponent } from \"../../shared/components/custom-table-cell-render/accessory-status-cell.component\";\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\nimport { ColorCellComponent } from \"../../shared/components/custom-table-cell-render/color-cell.component\";\nimport { PriceCellComponent } from \"../../shared/components/custom-table-cell-render/price-cell.component\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-devices\",\n  templateUrl: \"./devices.component.html\",\n  styleUrls: [\"./devices.component.scss\"],\n})\nexport class DevicesComponent extends BaseTable<Device> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n      },\n      status: {\n        title: \"Status\",\n        type: \"custom\",\n        renderComponent: AccessoryStatusCellComponent,\n      },\n      group: {\n        title: \"Group\",\n        type: \"string\",\n      },\n      brand: {\n        title: \"Brand\",\n        type: \"string\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      serialNumber: {\n        title: \"Serial Number\",\n        type: \"string\",\n      },\n      type: {\n        title: \"Type\",\n        type: \"string\",\n      },\n      battery: {\n        title: \"Battery\",\n        type: \"string\",\n      },\n      qualityLevel: {\n        title: \"Quality Level\",\n        type: \"string\",\n      },\n      color: {\n        title: \"Color\",\n        type: \"custom\",\n        renderComponent: ColorCellComponent,\n      },\n      aslGroup: {\n        title: \"ASL Group\",\n        type: \"string\",\n        hide: true,\n      },\n      price: {\n        title: \"Price\",\n        type: \"custom\",\n        renderComponent: PriceCellComponent,\n        hide: true,\n      },\n      location: {\n        title: \"Location\",\n        type: \"string\",\n        hide: true,\n      },\n      customer: {\n        title: \"Customer\",\n        type: \"string\",\n        hide: true,\n      },\n      actions: {\n        title: \"Actions\",\n        type: \"custom\",\n        width: \"1%\",\n        renderComponent: ActionsCellComponent,\n        sort: false,\n        filter: false,\n      },\n    },\n  };\n\n  localStorageSettingsKey = LOCAL_STORAGE_KEYS_FOR_TABLE.devices;\n\n  hiddenColumns = [\"aslGroup\", \"location\", \"price\", \"customer\"];\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().devices;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions\n      [selectedRows]=\"selectedRows\"\n      (handleRemoveAction)=\"removeItem()\"\n      (handleReloadAction)=\"reload()\"\n      (handleSettingsAction)=\"settingsDialog()\"\n    ></ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span>{{ source.count() }} Devices</span>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LayoutComponent } from \"../layout/layout.component\";\nimport { AccessoriesComponent } from \"./accessories/accessories.component\";\nimport { DevicesComponent } from \"./devices/devices.component\";\nimport { ServicesComponent } from \"./services/services.component\";\nimport { UtilitiesComponent } from \"./utilities/utilities.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: LayoutComponent,\n    children: [\n      {\n        path: \"devices\",\n        component: DevicesComponent,\n      },\n      {\n        path: \"accessories\",\n        component: AccessoriesComponent,\n      },\n      {\n        path: \"utilities\",\n        component: UtilitiesComponent,\n      },\n      {\n        path: \"services\",\n        component: ServicesComponent,\n      },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProductsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { NbCardModule, NbSelectModule } from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { AccessoriesComponent } from \"./accessories/accessories.component\";\nimport { DevicesComponent } from \"./devices/devices.component\";\nimport { ProductsRoutingModule } from \"./products-routing.module\";\nimport { ServicesComponent } from \"./services/services.component\";\nimport { UtilitiesComponent } from \"./utilities/utilities.component\";\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    DevicesComponent,\n    ServicesComponent,\n    AccessoriesComponent,\n    UtilitiesComponent,\n  ],\n  imports: [\n    CommonModule,\n    ProductsRoutingModule,\n    Ng2SmartTableModule,\n    NbCardModule,\n    NbSelectModule,\n    SharedModule\n  ],\n})\nexport class ProductsModule {}\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource } from \"ng2-smart-table\";\nimport { Service } from \"../../../@core/data/service\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\nimport { PriceCellComponent } from \"../../shared/components/custom-table-cell-render/price-cell.component\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-services\",\n  templateUrl: \"./services.component.html\",\n  styleUrls: [\"./services.component.scss\"],\n})\nexport class ServicesComponent extends BaseTable<Service> {\n  settings = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n        width: \"1%\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      price: {\n        title: \"Price\",\n        type: \"custom\",\n        renderComponent: PriceCellComponent,\n      },\n      actions: {\n        title: \"Actions\",\n        type: \"custom\",\n        width: \"1%\",\n        renderComponent: ActionsCellComponent,\n        sort: false,\n        filter: false,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().services;\n    this.source.load(data);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions\n      [selectedRows]=\"selectedRows\"\n      (handleRemoveAction)=\"removeItem()\"\n      (handleReloadAction)=\"reload()\"\n    ></ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span *ngIf=\"selectedRows.length; else allRows\">\n          {{ selectedRows.length }} selected services\n        </span>\n        <ng-template #allRows>{{ source.count() }} services</ng-template>\n      </div>\n      <div class=\"col-4\"></div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { Component } from \"@angular/core\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { SmartTableData } from \"../../../@core/data/smart-table\";\nimport { Utility } from \"../../../@core/data/utility\";\nimport { mapHideOrShowColumns } from \"../../../@core/utils/map-hide-or-show-columns\";\nimport {\n  LOCAL_STORAGE_KEYS_FOR_TABLE,\n  setItem,\n} from \"../../../@core/utils/save-local-storage\";\nimport { ActionsCellComponent } from \"../../shared/components/custom-table-cell-render/actions-cell.component\";\nimport { PriceCellComponent } from \"../../shared/components/custom-table-cell-render/price-cell.component\";\nimport { BaseTable } from \"../../shared/directives/base-table.directive\";\n\n@Component({\n  selector: \"ngx-utilities\",\n  templateUrl: \"./utilities.component.html\",\n  styleUrls: [\"./utilities.component.scss\"],\n})\nexport class UtilitiesComponent extends BaseTable<Utility> {\n  settings: Record<string, any> = {\n    selectMode: \"multi\",\n    actions: false,\n    columns: {\n      id: {\n        title: \"ID\",\n        type: \"number\",\n      },\n      type: {\n        title: \"Type\",\n        type: \"string\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      brand: {\n        title: \"Brand\",\n        type: \"string\",\n      },\n      quantity: {\n        title: \"Quantity\",\n        type: \"string\",\n      },\n      price: {\n        title: \"Price\",\n        type: \"custom\",\n        renderComponent: PriceCellComponent,\n        hide: true,\n      },\n      location: {\n        title: \"Location\",\n        type: \"string\",\n      },\n      actions: {\n        title: \"Actions\",\n        type: \"custom\",\n        width: \"1%\",\n        renderComponent: ActionsCellComponent,\n        sort: false,\n        filter: false,\n      },\n    },\n  };\n\n  localStorageSettingsKey = LOCAL_STORAGE_KEYS_FOR_TABLE.utilities;\n\n  hiddenColumns = [\"price\"];\n\n  selectedColumns = [];\n\n  constructor(\n    private service: SmartTableData,\n    protected readonly dialogService: NbDialogService\n  ) {\n    super(dialogService);\n    const data = this.service.getData().utilities;\n    this.source.load(data);\n  }\n\n  handleSelectedColumns(columns: string[]): void {\n    this.settings = mapHideOrShowColumns(\n      columns,\n      this.settings,\n      this.hiddenColumns\n    );\n    setItem(LOCAL_STORAGE_KEYS_FOR_TABLE.utilities, columns);\n  }\n}\n","<nb-card>\n  <nb-card-header>Actions</nb-card-header>\n  <nb-card-body>\n    <ngx-custom-actions\n      [selectedRows]=\"selectedRows\"\n      (handleRemoveAction)=\"removeItem()\"\n      (handleReloadAction)=\"reload()\"\n      (handleSettingsAction)=\"settingsDialog()\"\n    ></ngx-custom-actions>\n  </nb-card-body>\n</nb-card>\n<nb-card>\n  <nb-card-header>\n    <div class=\"row align-items-center\">\n      <div class=\"col-8\">\n        <span>{{ source.count() }} Utilities</span>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (rowSelect)=\"handleSelectedRow($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n"],"names":["LocalDataSource","LOCAL_STORAGE_KEYS_FOR_TABLE","AccessoryStatusCellComponent","ActionsCellComponent","PriceCellComponent","BaseTable","AccessoriesComponent","constructor","service","dialogService","selectMode","actions","columns","id","title","type","status","renderComponent","group","serialNumber","name","brand","price","hide","location","customer","width","sort","filter","accessories","data","getData","source","load","selectors","features","decls","vars","consts","template","i0","ctx","ColorCellComponent","DevicesComponent","battery","qualityLevel","color","aslGroup","devices","RouterModule","LayoutComponent","ServicesComponent","UtilitiesComponent","routes","path","component","children","ProductsRoutingModule","forChild","imports","exports","CommonModule","NbCardModule","NbSelectModule","Ng2SmartTableModule","SharedModule","ProductsModule","declarations","services","mapHideOrShowColumns","setItem","quantity","utilities","handleSelectedColumns","settings","hiddenColumns"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}